{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Policy Planner API",
    "contact" : {
      "name" : "support@firemon.com"
    },
    "license" : {
      "name" : "Apache 2.0 License",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "UNKNOWN"
  },
  "servers" : [ {
    "url" : "/policyplanner/api"
  } ],
  "paths" : {
    "/authentication/login" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "description" : "Authenticate a username/password and returns a token and authorities",
        "operationId" : "loginPost",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthRequestDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/authentication/logout" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "description" : "Logout and invalidate any previously stored authentication token",
        "operationId" : "logout",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/authentication/validate" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "description" : "Validate username/password",
        "operationId" : "validate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthRequestDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/config/{domainId}/layout" : {
      "get" : {
        "tags" : [ "Configuration Property" ],
        "description" : "Fetch the layout for the application settings page",
        "operationId" : "getConfigLayoutForProduct",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConfigPropertyLayoutDTO"
                }
              }
            }
          }
        }
      }
    },
    "/config/{domainId}/{group}/{name}" : {
      "get" : {
        "tags" : [ "Configuration Property" ],
        "description" : "Get a config property",
        "operationId" : "getConfigProperty",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "group",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AbstractConfigPropertyDTO"
                }
              }
            }
          }
        }
      }
    },
    "/config/{domainId}" : {
      "get" : {
        "tags" : [ "Configuration Property" ],
        "description" : "List all config properties",
        "operationId" : "listConfigProperties",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/AbstractConfigPropertyDTO"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Configuration Property" ],
        "description" : "Set a property",
        "operationId" : "setConfigProperty",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AbstractConfigPropertyDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Configuration Property" ],
        "description" : "Reset properties to their default. If the properties list is empty, it will reset ALL properties",
        "operationId" : "resetPropertyDefaults",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "nameList",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/config/{domainId}/{group}" : {
      "get" : {
        "tags" : [ "Configuration Property" ],
        "description" : "List config properties in group",
        "operationId" : "listConfigPropertiesByGroup",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "group",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AbstractConfigPropertyDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/config/{domainId}/nonsecret" : {
      "get" : {
        "tags" : [ "Configuration Property" ],
        "description" : "List all non secret config properties",
        "operationId" : "listNonSecretConfigProperties",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/AbstractConfigPropertyDTO"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logging" : {
      "get" : {
        "tags" : [ "Logging" ],
        "description" : "Returns the merged logging configuration from the default logging config file and the database user overrides",
        "operationId" : "getMergedLoggingConfig",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LoggingConfigDTO"
                }
              }
            }
          }
        }
      }
    },
    "/logging/reset" : {
      "delete" : {
        "tags" : [ "Logging" ],
        "description" : "Resets all loggers to their default values",
        "operationId" : "resetAllLoggers",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/logging/{loggerName}" : {
      "delete" : {
        "tags" : [ "Logging" ],
        "description" : "Reset a logger to the default value",
        "operationId" : "resetLogger",
        "parameters" : [ {
          "name" : "loggerName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/logging/{loggerName}/{level}" : {
      "post" : {
        "tags" : [ "Logging" ],
        "description" : "Sets a logger at the specified level",
        "operationId" : "setLogger",
        "parameters" : [ {
          "name" : "loggerName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "level",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/metric" : {
      "get" : {
        "tags" : [ "Metric" ],
        "description" : "Retrieve current metrics",
        "operationId" : "current",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metric/historical" : {
      "get" : {
        "tags" : [ "Metric" ],
        "description" : "Retrieve historical metrics",
        "operationId" : "historical",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "count",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 25
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/preference/{preferenceId}" : {
      "delete" : {
        "tags" : [ "Preference" ],
        "description" : "Delete a preference",
        "operationId" : "deletePreference",
        "parameters" : [ {
          "name" : "preferenceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/userpreference/{userPreferenceId}" : {
      "delete" : {
        "tags" : [ "Preference" ],
        "description" : "Delete a user preference",
        "operationId" : "deleteUserPreference",
        "parameters" : [ {
          "name" : "userPreferenceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/preference/{id}" : {
      "get" : {
        "tags" : [ "Preference" ],
        "description" : "Find preference by id",
        "operationId" : "findPreferenceById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PreferenceDTO"
                }
              }
            }
          }
        }
      }
    },
    "/preference/filter" : {
      "get" : {
        "tags" : [ "Preference" ],
        "description" : "Retrieve preferences that match a search query",
        "operationId" : "findPreferencesByQuery",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "description" : "A list of sort parameters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page in which to retrieve results",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of results in the page",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "A search parameter",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOPreferenceDTO"
                }
              }
            }
          }
        }
      }
    },
    "/userpreference/{id}" : {
      "get" : {
        "tags" : [ "Preference" ],
        "description" : "Find user preference by id",
        "operationId" : "findUserPreferenceById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPreferenceDTO"
                }
              }
            }
          }
        }
      }
    },
    "/userpreference/language" : {
      "get" : {
        "tags" : [ "Preference" ],
        "description" : "Get a users language preference",
        "operationId" : "getUserLanguagePreference",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserLanguagePreferenceDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Preference" ],
        "description" : "Save a users language preference.",
        "operationId" : "saveUserLanguagePreference",
        "parameters" : [ {
          "name" : "localeCode",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPreferenceDTO"
                }
              }
            }
          }
        }
      }
    },
    "/preference" : {
      "get" : {
        "tags" : [ "Preference" ],
        "description" : "List all preferences by product",
        "operationId" : "listPreferencesByProduct",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PreferenceDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Preference" ],
        "description" : "Save a preference.",
        "operationId" : "savePreference",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PreferenceDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PreferenceDTO"
                }
              }
            }
          }
        }
      }
    },
    "/userpreference" : {
      "get" : {
        "tags" : [ "Preference" ],
        "description" : "List user preferences by product",
        "operationId" : "listUserPreferencesByProduct",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/UserPreferenceDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Preference" ],
        "description" : "Save a user preference.",
        "operationId" : "saveUserPreference",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserPreferenceDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPreferenceDTO"
                }
              }
            }
          }
        }
      }
    },
    "/preference/language/{localeCode}" : {
      "put" : {
        "tags" : [ "Preference" ],
        "description" : "Update enterprise language preference",
        "operationId" : "updateLanguagePreference",
        "parameters" : [ {
          "name" : "localeCode",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PreferenceDTO"
                }
              }
            }
          }
        }
      }
    },
    "/version" : {
      "get" : {
        "tags" : [ "Version" ],
        "description" : "Get the server and version information for the service.",
        "operationId" : "getVersion",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/email/template" : {
      "get" : {
        "tags" : [ "Workflow Email" ],
        "description" : "Get the list of email templates for a workflow.",
        "operationId" : "getEmailTemplates",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EmailTemplateCollectionDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Workflow Email" ],
        "description" : "Save email templates for a workflow.",
        "operationId" : "saveEmailTemplates",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmailTemplateCollectionDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Workflow Email" ],
        "description" : "Create an email template for a workflow.",
        "operationId" : "createEmailTemplate",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmailTemplateDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Workflow Email" ],
        "description" : "Delete email templates for a workflow.",
        "operationId" : "deleteEmailTemplates",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmailTemplateCollectionDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/email/template/{emailTemplateId}" : {
      "delete" : {
        "tags" : [ "Workflow Email" ],
        "description" : "Delete email templates for a workflow.",
        "operationId" : "deleteEmailTemplate",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "emailTemplateId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}/events" : {
      "get" : {
        "tags" : [ "Event Log" ],
        "description" : "Get the audit events for a workflow packet.",
        "operationId" : "getEventLogForPacket",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "A list of sort parameters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page in which to retrieve results",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of results in the page",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOWorkflowEventLogDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}/task/events" : {
      "get" : {
        "tags" : [ "Event Log" ],
        "description" : "Get the task audit events for a workflow packet",
        "operationId" : "getTaskEventLogsForPacket",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "A list of sort parameters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page in which to retrieve results",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of results in the page",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOWorkflowEventLogDTO"
                }
              }
            }
          }
        }
      }
    },
    "/event/domain/{domainId}/workflow/{workflowId}/handler/{workflowEventHandlerId}/sequence" : {
      "post" : {
        "tags" : [ "Event" ],
        "description" : "Create a workflow event bean sequence for the given workflow version",
        "operationId" : "createWorkflowEventBeanSequence",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowEventHandlerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowEventBeanSequenceDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowEventBeanSequenceDTO"
                }
              }
            }
          }
        }
      }
    },
    "/event/domain/{domainId}/workflow/{workflowId}/version/{workflowVersionId}/handler" : {
      "post" : {
        "tags" : [ "Event" ],
        "description" : "Create a workflow activiti event handler for the given workflow version",
        "operationId" : "createWorkflowEventHandler",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowVersionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowEventHandlerDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowEventHandlerDTO"
                }
              }
            }
          }
        }
      }
    },
    "/event/domain/{domainId}/workflow/{workflowId}/handler/{workflowEventHandlerId}/sequence/{workflowEventBeanSequenceId}" : {
      "get" : {
        "tags" : [ "Event" ],
        "description" : "Get a specific workflow event bean sequence for the given workflow version",
        "operationId" : "getWorkflowEventBeanSequence",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowEventHandlerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowEventBeanSequenceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowEventBeanSequenceDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Event" ],
        "description" : "Save a specific workflow event bean sequence for the given workflow version",
        "operationId" : "saveWorkflowEventBeanSequence",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowEventHandlerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowEventBeanSequenceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowEventBeanSequenceDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Event" ],
        "description" : "Delete a specific workflow event bean sequence for the given workflow version",
        "operationId" : "deleteWorkflowEventBeanSequence",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowEventHandlerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowEventBeanSequenceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/event/domain/{domainId}/workflow/{workflowId}/version/{workflowVersionId}/handler/{workflowEventHandlerId}" : {
      "get" : {
        "tags" : [ "Event" ],
        "description" : "Get a specific workflow activiti event handler for the given workflow version",
        "operationId" : "getWorkflowEventHandler",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowVersionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowEventHandlerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowEventHandlerDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Event" ],
        "description" : "Save a specific workflow activiti event handler for the given workflow version",
        "operationId" : "saveWorkflowEventHandler",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowVersionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowEventHandlerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowEventHandlerDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Event" ],
        "description" : "Delete a specific workflow activiti event handler for the given workflow version",
        "operationId" : "deleteWorkflowEventHandler",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowVersionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowEventHandlerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/event/domain/{domainId}/workflow/{workflowId}/handler/{workflowEventHandlerId}/sequences" : {
      "get" : {
        "tags" : [ "Event" ],
        "description" : "Get all workflow event bean sequences for the given workflow version",
        "operationId" : "listWorkflowEventBeanSequences",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowEventHandlerId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOWorkflowEventBeanSequenceDTO"
                }
              }
            }
          }
        }
      }
    },
    "/event/domain/{domainId}/workflow/{workflowId}/version/{workflowVersionId}/handlers" : {
      "get" : {
        "tags" : [ "Event" ],
        "description" : "Get all workflow activiti event handlers for the given workflow version",
        "operationId" : "listWorkflowEventHandlers",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowVersionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOWorkflowEventHandlerDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/field" : {
      "post" : {
        "tags" : [ "Field" ],
        "description" : "Create a workflow field for the given workflow",
        "operationId" : "createWorkflowField",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowFieldDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowFieldDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/field" : {
      "get" : {
        "tags" : [ "Field" ],
        "description" : "Get a paginated list of all Workflow Fields with optional filters.",
        "operationId" : "findAll",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "description" : "The domain ID to search",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "A list of sort parameters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page in which to retrieve results",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of results in the page",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "A list of filter parameters, for example \"filterName=value\".  Filtering by multiple fields is accomplished with multiple filters: filter=filterName1=value1&filter=filterName2=value2",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOWorkflowFieldDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/fields" : {
      "get" : {
        "tags" : [ "Field" ],
        "description" : "Retrieves a list of fields for the given workflow",
        "operationId" : "getFieldsForWorkflow",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowFieldCollectionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/field/{workflowFieldId}" : {
      "get" : {
        "tags" : [ "Field" ],
        "description" : "Retrieves a field for the given workflow",
        "operationId" : "getWorkflowField",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowFieldId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowFieldDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Field" ],
        "description" : "Save a workflow field for the given workflow",
        "operationId" : "saveWorkflowField",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowFieldId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowFieldDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}/field" : {
      "get" : {
        "tags" : [ "Field" ],
        "description" : "Retrieves a list of fields for the given workflow packet",
        "operationId" : "getWorkflowFieldsForPacket",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowFieldCollectionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/field/reserved/{productKey}" : {
      "get" : {
        "tags" : [ "Field" ],
        "description" : "Get a list of reserved fields",
        "operationId" : "listReservedFields",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "productKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "SM", "PO", "PP", "RA", "GPC", "AUTO" ]
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ReservedFieldDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}/attachment" : {
      "get" : {
        "tags" : [ "Packet Attachment" ],
        "description" : "Retrieve metadata for attachments associated with the given workflow packet",
        "operationId" : "getWorkflowPacketAttachmentMetadata",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOWorkflowPacketAttachmentDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Packet Attachment" ],
        "description" : "Create references to previously staged attachments",
        "operationId" : "createWorkflowPacketAttachment",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowPacketAttachmentCollectionDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowPacketAttachmentCollectionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}/attachment/{attachmentId}" : {
      "get" : {
        "tags" : [ "Packet Attachment" ],
        "description" : "Retrieve an attachment for a workflow packet",
        "operationId" : "getWorkflowPacketAttachment",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Workflow package attachment response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CompliancePackageDTO"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "type" : "string",
                  "description" : "The workflow packet attachment",
                  "format" : "binary"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Packet Attachment" ],
        "description" : "Update attachment metadata specified for the given workflow packet",
        "operationId" : "saveWorkflowPacketAttachmentMetadata",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowPacketAttachmentDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Packet Attachment" ],
        "description" : "Deletes a reference to previously saved attachment",
        "operationId" : "deleteWorkflowPacketAttachment",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/packet/attachment" : {
      "post" : {
        "tags" : [ "Packet Attachment" ],
        "summary" : "Stage one or more attachments",
        "description" : "For each attachment add a content-disposition header. For example:\n attachment; filename=\"myfilename.png\"; description=\"This is a description\"",
        "operationId" : "stageWorkflowPacketAttachment",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "format" : "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowPacketAttachmentCollectionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}/comment" : {
      "post" : {
        "tags" : [ "Packet Comment" ],
        "description" : "Create a workflow packet comment",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowPacketCommentDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowPacketCommentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}/comment/{workflowPacketCommentId}" : {
      "get" : {
        "tags" : [ "Packet Comment" ],
        "description" : "Get a specific comment for a workflow packet",
        "operationId" : "get",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "workflowPacketCommentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowPacketCommentDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Packet Comment" ],
        "description" : "Save a specific comment for a workflow packet",
        "operationId" : "save",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "workflowPacketCommentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowPacketCommentDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowPacketCommentDTO"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Packet Comment" ],
        "description" : "Delete a specific comment for a workflow packet",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "workflowPacketCommentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}/comments" : {
      "get" : {
        "tags" : [ "Packet Comment" ],
        "description" : "List the comments for a workflow packet",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOWorkflowPacketCommentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/packet" : {
      "post" : {
        "tags" : [ "Packet" ],
        "description" : "Create a workflow packet instance",
        "operationId" : "create_1",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowPacketDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowPacketDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/default/packet" : {
      "post" : {
        "tags" : [ "Packet" ],
        "description" : "Create a workflow packet instance for the default workflow",
        "operationId" : "createDefault",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowPacketDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowPacketDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}" : {
      "get" : {
        "tags" : [ "Packet" ],
        "description" : "Get workflow packet details",
        "operationId" : "get_1",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowPacketDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Packet" ],
        "description" : "Save workflow packet",
        "operationId" : "save_1",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowPacketDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}/pdf" : {
      "get" : {
        "tags" : [ "Packet" ],
        "description" : "Get workflow packet details as pdf",
        "operationId" : "getPdf",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/octet-stream" : { }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/packet-task/{workflowPacketTaskId}/assign" : {
      "put" : {
        "tags" : [ "Packet Task" ],
        "description" : "Assign a workflow packet task to a user",
        "operationId" : "assignWorkflowPacketTask",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "workflowPacketTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "text/plain" : {
              "schema" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/packet-task/{workflowPacketTaskId}/write" : {
      "get" : {
        "tags" : [ "Packet Task" ],
        "description" : "Returns 'true' or 'false' on whether the calling user has write access to this task, and whether it is valid",
        "operationId" : "canWriteTask",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "workflowPacketTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/packet-task/{workflowPacketTaskId}/complete" : {
      "put" : {
        "tags" : [ "Packet Task" ],
        "description" : "Complete a workflow packet task",
        "operationId" : "completeWorkflowPacketTask",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "workflowPacketTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "button",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowPacketDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/packet-task/{workflowPacketTaskId}/candidate" : {
      "get" : {
        "tags" : [ "Packet Task" ],
        "description" : "Get a list of users eligible to be assigned to the given workflow packet task",
        "operationId" : "getEligibleUserCandidatesForPacketTask",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "workflowPacketTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "A list of sort parameters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page in which to retrieve results",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of results in the page",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "A search parameter",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOUserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/packet-task/{workflowPacketTaskId}/properties" : {
      "get" : {
        "tags" : [ "Packet Task" ],
        "description" : "Get the properties for a workflow task",
        "operationId" : "getWorkflowTaskProperties",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "workflowPacketTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTaskPropertiesDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/packet-task/{workflowPacketTaskId}/unassign" : {
      "put" : {
        "tags" : [ "Packet Task" ],
        "description" : "Unassign a workflow packet task",
        "operationId" : "unassignWorkflowPacketTask",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "workflowPacketTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/domain/{domainId}/permission/workflow/{workflowId}/user/current" : {
      "get" : {
        "tags" : [ "Permission" ],
        "description" : "Get the Workflow Permission Definitions for this user in this workflow and domain",
        "operationId" : "findUserPermissionsByWorkflowId",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowPermissionDefinitionCollectionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/permission/workflow/user/create" : {
      "get" : {
        "tags" : [ "Permission" ],
        "description" : "List the workflows a user has CREATE_PACKET access to",
        "operationId" : "getCreatePacketWorkflows",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowDTOCollection"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/plugin/{groupId}/{artifactId}" : {
      "post" : {
        "tags" : [ "Workflow" ],
        "description" : "Create an instance of a workflow plugin",
        "operationId" : "createPluginWorkflow",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "artifactId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectNode"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowVersionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "description" : "List the workflow process definitions",
        "operationId" : "getWorkflows",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOWorkflowDTO"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Workflow" ],
        "description" : "Deploy a workflow",
        "operationId" : "deploy",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowVersionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/disable" : {
      "put" : {
        "tags" : [ "Workflow" ],
        "description" : "Disable a Workflow",
        "operationId" : "disableWorkflow",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/enable" : {
      "put" : {
        "tags" : [ "Workflow" ],
        "description" : "Enable a Workflow",
        "operationId" : "enableWorkflow",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/default" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "description" : "Get the default workflow",
        "operationId" : "getDefaultWorkflow",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowDTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "type" : "string",
                "description" : "The default workflow BPMN definition as an XML stream"
              }
            },
            "image/png" : {
              "schema" : {
                "type" : "string",
                "description" : "The default workflow BPMN definition diagram as a PNG stream",
                "format" : "binary"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/default/tasks" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "description" : "Get the default workflow task definitions",
        "operationId" : "getDefaultWorkflowTasks",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOWorkflowTaskDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "description" : "Get a workflow",
        "operationId" : "getWorkflow",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "includeDisabled",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WorkflowDTO"
              }
            },
            "application/xml" : {
              "schema" : {
                "type" : "string",
                "description" : "The workflow BPMN definition as an XML stream"
              }
            },
            "image/png" : {
              "schema" : {
                "type" : "string",
                "description" : "The workflow BPMN definition diagram as a PNG stream",
                "format" : "binary"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowDTO"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Workflow" ],
        "description" : "Deploy a workflow",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowVersionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/additional-config-form" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "description" : "Build the additional config form based on workflow features",
        "operationId" : "getWorkflowAdditionalPropertiesForm",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectNode"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}/completed-properties" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "description" : "Get the completed form layout (task properties) for a workflow",
        "operationId" : "getWorkflowCompletedProperties",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTaskPropertiesDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/start-properties" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "description" : "Get the start form layout for a workflow",
        "operationId" : "getWorkflowStartProperties",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTaskPropertiesDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "description" : "Get a workflow task",
        "operationId" : "getWorkflowTask",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTaskDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/taskProperties/{workflowTaskId}" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "description" : "Get task properties by workflowTaskId",
        "operationId" : "getWorkflowTaskProperties_1",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowTaskPropertiesDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/tasks" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "description" : "Get workflow task definitions",
        "operationId" : "getWorkflowTasks",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOWorkflowTaskDTO"
                }
              }
            }
          }
        }
      }
    },
    "/workflow/hasWorkflows" : {
      "get" : {
        "tags" : [ "Workflow" ],
        "description" : "Get if there is at least one workflow deployed",
        "operationId" : "hasWorkflows",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/plugin" : {
      "put" : {
        "tags" : [ "Workflow" ],
        "description" : "Update an instance of a workflow plugin",
        "operationId" : "updatePluginWorkflow",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowVersionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/config" : {
      "put" : {
        "tags" : [ "Workflow" ],
        "description" : "Update configuration properties for an existing workflow",
        "operationId" : "updateWorkflowConfigProperties",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ObjectNode"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowDTO"
                }
              }
            }
          }
        }
      }
    },
    "/siql/ticket/paged-search/csv" : {
      "get" : {
        "tags" : [ "Siql" ],
        "description" : "get csv file for a SIQL Query",
        "operationId" : "generateCsvForTickets",
        "parameters" : [ {
          "name" : "q",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "A list of sort parameters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page in which to retrieve results",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of results in the page",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/siql/domain/{domainId}/ticket/paged-search/csv" : {
      "get" : {
        "tags" : [ "Siql" ],
        "description" : "get csv file for a SIQL Query",
        "operationId" : "generateCsvForTickets_1",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "A list of sort parameters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page in which to retrieve results",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of results in the page",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/siql/review/paged-search" : {
      "get" : {
        "tags" : [ "Siql" ],
        "description" : "Perform a SIQL Query for reviews",
        "operationId" : "queryReviews",
        "parameters" : [ {
          "name" : "q",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "A list of sort parameters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page in which to retrieve results",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of results in the page",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOWorkflowPacketSiqlDTO"
                }
              }
            }
          }
        }
      }
    },
    "/siql/domain/{domainId}/review/paged-search" : {
      "get" : {
        "tags" : [ "Siql" ],
        "description" : "Perform a SIQL Query for reviews",
        "operationId" : "queryReviews_1",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "A list of sort parameters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page in which to retrieve results",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of results in the page",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOWorkflowPacketSiqlDTO"
                }
              }
            }
          }
        }
      }
    },
    "/siql/ticket/paged-search" : {
      "get" : {
        "tags" : [ "Siql" ],
        "description" : "Perform a SIQL Query for tickets",
        "operationId" : "queryTickets",
        "parameters" : [ {
          "name" : "q",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "A list of sort parameters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page in which to retrieve results",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of results in the page",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOWorkflowPacketSiqlDTO"
                }
              }
            }
          }
        }
      }
    },
    "/siql/domain/{domainId}/ticket/paged-search" : {
      "get" : {
        "tags" : [ "Siql" ],
        "description" : "Perform a SIQL Query for tickets",
        "operationId" : "queryTickets_1",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "A list of sort parameters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page in which to retrieve results",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of results in the page",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOWorkflowPacketSiqlDTO"
                }
              }
            }
          }
        }
      }
    },
    "/task/service/variables/{serviceTaskType}" : {
      "get" : {
        "tags" : [ "Task" ],
        "description" : "Get Exit Variable information for a given service task type.",
        "operationId" : "getServiceTaskExitVariablesForTask",
        "parameters" : [ {
          "name" : "serviceTaskType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AUTO_DESIGN_CHANGE_TASK", "CUSTOM_PROPERTY_UPDATE_TASK", "EXTERNAL_WORKFLOW_PACKET_CREATE_TASK", "EXTERNAL_WORKFLOW_PACKET_LOOKUP_TASK", "EXTERNAL_WORKFLOW_PACKET_UPDATE_TASK", "HTTP_REQUEST_TASK", "LDAP_ATTRIBUTES_LOOKUP_TASK", "PACKET_AUTOMATION_GENERATION_TASK", "PRE_CHANGE_ASSESSMENT_TASK", "WORKFLOW_VARIABLE_UPDATE_FROM_CUSTOM_PROPERTY_TASK" ]
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ServiceTaskExitVariableDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/service/form/{serviceTaskType}" : {
      "get" : {
        "tags" : [ "Task" ],
        "description" : "Get a configuration form for a Service Task.",
        "operationId" : "getServiceTaskFormForType",
        "parameters" : [ {
          "name" : "serviceTaskType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "AUTO_DESIGN_CHANGE_TASK", "CUSTOM_PROPERTY_UPDATE_TASK", "EXTERNAL_WORKFLOW_PACKET_CREATE_TASK", "EXTERNAL_WORKFLOW_PACKET_LOOKUP_TASK", "EXTERNAL_WORKFLOW_PACKET_UPDATE_TASK", "HTTP_REQUEST_TASK", "LDAP_ATTRIBUTES_LOOKUP_TASK", "PACKET_AUTOMATION_GENERATION_TASK", "PRE_CHANGE_ASSESSMENT_TASK", "WORKFLOW_VARIABLE_UPDATE_FROM_CUSTOM_PROPERTY_TASK" ]
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectNode"
                }
              }
            }
          }
        }
      }
    },
    "/task/service" : {
      "get" : {
        "tags" : [ "Task" ],
        "description" : "Get list of service tasks for a given product key.",
        "operationId" : "getServiceTasks",
        "parameters" : [ {
          "name" : "q",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeCannotCreate",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ServiceTaskDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/task/user/forms" : {
      "get" : {
        "tags" : [ "Task" ],
        "description" : "Get the configuration forms for the user task tool settings.",
        "operationId" : "getUserTaskForms",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "$ref" : "#/components/schemas/ObjectNode"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/version/{workflowVersionId}/upgrade" : {
      "get" : {
        "tags" : [ "Version" ],
        "description" : "Retrieve a list of workflow versions that can have their packets upgraded to the on passed in.",
        "operationId" : "findEligibleVersionsForUpgrade",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowVersionId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowVersionCollectionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/version/latest/all" : {
      "get" : {
        "tags" : [ "Version" ],
        "description" : "List the latest workflow version for all workflow process definitions",
        "operationId" : "getAllLatestWorkflowVersions",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "includeDisabled",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOWorkflowVersionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/version/latest" : {
      "get" : {
        "tags" : [ "Version" ],
        "description" : "Get the latest workflow version for a given workflow",
        "operationId" : "getLatestWorkflowVersion",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "includeDisabled",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowVersionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/version/history" : {
      "get" : {
        "tags" : [ "Version" ],
        "description" : "Get the workflow version history for a given workflow",
        "operationId" : "getWorkflowVersionHistory",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOWorkflowVersionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/version/latest/config/connection" : {
      "put" : {
        "tags" : [ "Version" ],
        "description" : "Update External Workflow Packets external connection information",
        "operationId" : "updateWorkflowVersionExternalConnectionInfo",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "connectionURL",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "connectionUser",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "connectionPassword",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/from/{workflowVersionFromId}/to/{workflowVersionToId}/all" : {
      "put" : {
        "tags" : [ "Version" ],
        "description" : "Update All Workflow Packets in the from version from version to version",
        "operationId" : "upgradeAllPacketsForVersion",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowVersionFromId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowVersionToId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/from/{workflowVersionFromId}/to/{workflowVersionToId}" : {
      "put" : {
        "tags" : [ "Version" ],
        "description" : "Update specified Workflow Packets from version to version",
        "operationId" : "upgradeWorkflowPackets",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowVersionFromId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowVersionToId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      }
    },
    "/kpi/{key}/workflow/domain/{domainId}/workflow/{workflowId}" : {
      "get" : {
        "tags" : [ "KPI" ],
        "description" : "Get a workflow level KPI",
        "operationId" : "getKpiForWorkflowPacketDomain",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KPIDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/changes/associated/{changeLogId}/count" : {
      "get" : {
        "tags" : [ "Policy Plan Change" ],
        "description" : "Get a count of policy plan changes  associated to the specified change log",
        "operationId" : "countAssociatedChangeLogs",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "changeLogId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/changes/{ruleAction}/referenced/{ruleUuid}/count" : {
      "get" : {
        "tags" : [ "Policy Plan Change" ],
        "description" : "Get a count of policy plan changes that reference the specified rule",
        "operationId" : "countReferencedRules",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "ruleAction",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ruleUuid",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/requirement/{policyPlanRequirementId}/change" : {
      "post" : {
        "tags" : [ "Policy Plan Change" ],
        "description" : "Create a policy plan change for the given policy plan requirement",
        "operationId" : "createPolicyPlanChange",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanRequirementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "applyPreferences",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyPlanChangeDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyPlanChangeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/requirement/{policyPlanRequirementId}/changes" : {
      "get" : {
        "tags" : [ "Policy Plan Change" ],
        "description" : "Get a list of policy plan changes for the given policy plan requirement",
        "operationId" : "listRequirementPolicyPlanChanges",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanRequirementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOPolicyPlanChangeDTO"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Policy Plan Change" ],
        "description" : "Create multiple policy plan changes for the given policy plan requirement",
        "operationId" : "createPolicyPlanChanges",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanRequirementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyPlanChangeCollectionDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyPlanChangeCollectionDTO"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy Plan Change" ],
        "description" : "Delete collection of policy plan changes for a given requirement",
        "operationId" : "deletePolicyPlanChanges",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanRequirementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanChangeIds",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/requirement/{policyPlanRequirementId}/change/{policyPlanChangeId}" : {
      "get" : {
        "tags" : [ "Policy Plan Change" ],
        "description" : "Get a specific policy plan change for the given policy plan requirement",
        "operationId" : "getPolicyPlanChange",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanRequirementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanChangeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyPlanChangeDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy Plan Change" ],
        "description" : "Save a specific policy plan change for the given policy plan requirement",
        "operationId" : "savePolicyPlanChange",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanRequirementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanChangeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyPlanChangeDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy Plan Change" ],
        "description" : "Delete a specific policy plan change for the given policy plan requirement",
        "operationId" : "deletePolicyPlanChange",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanRequirementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanChangeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/policyplan/change/type/name/{policyPlanChangeTypeName}" : {
      "get" : {
        "tags" : [ "Policy Plan Change" ],
        "description" : "Get a specific policy plan change type by name",
        "operationId" : "getPolicyPlanChangeTypeByName",
        "parameters" : [ {
          "name" : "policyPlanChangeTypeName",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "enum" : [ "GENERAL", "OBJECT", "RULE" ]
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}/device/{deviceId}/change/objects/{objectType}" : {
      "get" : {
        "tags" : [ "Policy Plan Change" ],
        "description" : "Gets the set of object changes (filtered by type) for the given ticket and device",
        "operationId" : "getPolicyPlanObjectsByType",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "deviceId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "objectType",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "NETWORK", "SERVICE" ]
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOPolicyPlanObjectDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/requirement/{policyPlanRequirementId}/change/{policyPlanChangeId}/unused" : {
      "put" : {
        "tags" : [ "Policy Plan Change" ],
        "description" : "Returns a set of changes that will no longer be referenced given the update to this change",
        "operationId" : "getUnusedChangesBasedOnUpdate",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanRequirementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanChangeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyPlanChangeDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "uniqueItems" : true,
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PolicyPlanChangeDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/changes" : {
      "get" : {
        "tags" : [ "Policy Plan Change" ],
        "description" : "Get a list of policy plan changes for the given workflow packet",
        "operationId" : "listPacketPolicyPlanChanges",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOPolicyPlanChangeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/change/types" : {
      "get" : {
        "tags" : [ "Policy Plan Change" ],
        "description" : "Get a list of policy plan change types",
        "operationId" : "listPolicyPlanChangeTypes",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOPolicyPlanChangeTypeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/requirement/{policyPlanRequirementId}/change/{policyPlanChangeId}/verify" : {
      "put" : {
        "tags" : [ "Policy Plan Change" ],
        "description" : "verify a specific policy plan change",
        "operationId" : "verifyPolicyPlanChange",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanRequirementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanChangeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyPlanChangeDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/requirement" : {
      "post" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Create a policy plan requirement for the given workflow packet",
        "operationId" : "createPolicyPlanRequirement",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyPlanRequirementDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyPlanRequirementDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/requirements" : {
      "get" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Get a list of policy plan requirements for the given workflow packet with changes populated",
        "operationId" : "listPolicyPlanRequirements_1",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOPolicyPlanRequirementDTO"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Create multiple policy plan requirements for the given workflow packet",
        "operationId" : "createPolicyPlanRequirements",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyPlanRequirementCollectionDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyPlanRequirementCollectionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/requirement/{policyPlanRequirementId}" : {
      "get" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Get a specific policy plan requirement for the given workflow packet",
        "operationId" : "getPolicyPlanRequirement",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanRequirementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyPlanRequirementDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Save a specific policy plan requirement for the given workflow packet",
        "operationId" : "savePolicyPlanRequirement",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanRequirementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyPlanRequirementDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Delete a specific policy plan requirement for the given workflow packet",
        "operationId" : "deletePolicyPlanRequirement",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanRequirementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/childKey/{childKey}/parseCSV" : {
      "get" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Parse csv into Policy Planner requirements.",
        "operationId" : "generatePolicyPlanRequirementCSV",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "requirementsDateFormat",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "MM/dd/yyyy"
          }
        }, {
          "name" : "childKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : { }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Parse csv into Policy Planner requirements.",
        "operationId" : "parsePolicyPlanRequirementCSV",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "requirementsDateFormat",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "MM/dd/yyyy"
          }
        }, {
          "name" : "childKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "format" : "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyPlanRequirementErrorCollectionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/packet/{packetId}/requirement/{requirementId}/rulerec" : {
      "get" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Generate recommended changes for the given requirement",
        "operationId" : "generateRecommendedChanges",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "packetId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "requirementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "deviceGroupId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "addressMatchingStrategy",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "enum" : [ "INTERSECTS", "SUPERSET_OF" ]
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChangeRecommendationDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/application/{applicationId}/connectivity/{connectivityId}/rulerec" : {
      "get" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Generate recommended changes for the given Application Connectivity",
        "operationId" : "generateRecommendedChangesForConnectivity",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "applicationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "connectivityId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "strategy",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "NONE",
            "enum" : [ "NAME_PATTERN", "HITCOUNT", "REFERENCES", "NONE" ]
          }
        }, {
          "name" : "forceTiebreak",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "pattern",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }, {
          "name" : "deviceGroupId",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "addressMatchingStrategy",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "INTERSECTS",
            "enum" : [ "INTERSECTS", "SUPERSET_OF" ]
          }
        }, {
          "name" : "allowAnonymous",
          "in" : "query",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "modifyBehavior",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "MODIFY",
            "enum" : [ "CREATE", "MODIFY", "BOTH" ]
          }
        }, {
          "name" : "managerRecMethod",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "LEAST_ACCESS",
            "enum" : [ "BALANCED", "FEWEST_CHANGES", "LEAST_ACCESS" ]
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ChangeRecommendationDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/requirement/field" : {
      "get" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Retrieves a list of Policy Plan Requirement fields for the given workflow",
        "operationId" : "getPolicyPlanRequirementFieldsForWorkflow",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyPlanRequirementFieldCollectionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}/requirement/field" : {
      "get" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Retrieves a list of Policy Plan Requirement fields for the given workflow packet",
        "operationId" : "getPolicyPlanRequirementFieldsForWorkflow_1",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyPlanRequirementFieldCollectionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/requirement/{policyPlanRequirementId}/verify/results" : {
      "get" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Get a list of verification process results for the given policy plan requirement",
        "operationId" : "listAllVerificationProcessResultsForPolicyPlanRequirement",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanRequirementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOVerificationProcessResultDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/requirement/{policyPlanRequirementId}/verify/results/latest" : {
      "get" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Get a list of the most recent verification process results for the given policy plan requirement",
        "operationId" : "listMostRecentVerificationProcessResultsForPolicyPlanRequirement",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "policyPlanRequirementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VerificationProcessResultDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}/completed/requirements" : {
      "get" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Get a list of policy plan requirements for the given workflow packet",
        "operationId" : "listPolicyPlanRequirements",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOPolicyPlanRequirementDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/requirementsBasic" : {
      "get" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Get a list of policy plan requirements for the given workflow packet",
        "operationId" : "listPolicyPlanRequirementsBasic",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOPolicyPlanRequirementBasicDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/childKey/{childKey}/parseXLS" : {
      "post" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Parse xls into Policy Planner requirements.",
        "operationId" : "parsePolicyPlanRequirementXLS",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "childKey",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "requirementsDateFormat",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "MM/dd/yyyy"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "format" : "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyPlanRequirementErrorCollectionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/requirements/replace" : {
      "post" : {
        "tags" : [ "Policy Plan Requirement" ],
        "description" : "Removes all policy plan requirements for the given workflow packet and adds the one in the request",
        "operationId" : "replacePolicyPlanRequirements",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyPlanRequirementCollectionDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyPlanRequirementCollectionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/rule" : {
      "post" : {
        "tags" : [ "Policy Plan Rule" ],
        "description" : "Create a policy plan rule",
        "operationId" : "createPolicyPlanRule",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyPlanRuleDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyPlanRuleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/policyplan/rule/{policyPlanRuleId}" : {
      "get" : {
        "tags" : [ "Policy Plan Rule" ],
        "description" : "Get a specific policy plan rule",
        "operationId" : "getPolicyPlanRule",
        "parameters" : [ {
          "name" : "policyPlanRuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PolicyPlanRuleDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Policy Plan Rule" ],
        "description" : "Save a specific policy plan rule",
        "operationId" : "savePolicyPlanRule",
        "parameters" : [ {
          "name" : "policyPlanRuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PolicyPlanRuleDTO"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Policy Plan Rule" ],
        "description" : "Delete a specific policy plan rule",
        "operationId" : "deletePolicyPlanRule",
        "parameters" : [ {
          "name" : "policyPlanRuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/policyplan/rules" : {
      "get" : {
        "tags" : [ "Policy Plan Rule" ],
        "description" : "Get a list of policy plan rules",
        "operationId" : "listPolicyPlanRules",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultDTOPolicyPlanRuleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/prechangeassessments/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}/results" : {
      "get" : {
        "tags" : [ "Pre-Change Assessment" ],
        "description" : "Get pre-change assessment results for a workflow packet",
        "operationId" : "getPreChangeAssessmentResults",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/PreChangeAssessmentResultDTO"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/prechangeassessments/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}/run" : {
      "post" : {
        "tags" : [ "Pre-Change Assessment" ],
        "description" : "Run PreChange Assessment",
        "operationId" : "runPreChangeAssessment",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "controlTypes",
          "in" : "query",
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ALLOWED_SERVICES", "CHANGE_WINDOW_VIOLATION", "DEVICE_ACCESS_ANALYSIS", "DEVICE_PROPERTY", "DEVICE_STATUS", "NETWORK_ACCESS_ANALYSIS", "REGEX", "REGEX_MULTIPATTERN", "RULE_SEARCH", "RULE_USAGE", "SERVICE_RISK_ANALYSIS", "ZONE_MATRIX", "ZONE_BASED_RULE_SEARCH" ]
            }
          }
        }, {
          "name" : "enableRiskScoreAnalysis",
          "in" : "query",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/prechangeassessments/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}/requirement/{requirementId}/reviewDecision/{reviewDecision}" : {
      "put" : {
        "tags" : [ "Pre-Change Assessment" ],
        "description" : "Update workflow requirement approval",
        "operationId" : "updateWorkflowRequirementApproval",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "requirementId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "reviewDecision",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    },
    "/widget/{key}/workflow/domain/{domainId}/workflow/{workflowId}/tag/{tagId}" : {
      "get" : {
        "tags" : [ "Widget" ],
        "description" : "Get a domain level tagged workflow widget",
        "operationId" : "getWidgetForTaggedWorkflowPacket",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "tagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "A list of sort parameters",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page in which to retrieve results",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Number of results in the page",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WidgetDTO"
                }
              }
            }
          }
        }
      }
    },
    "/widget/{key}/workflow/domain/{domainId}/workflow/{workflowId}" : {
      "get" : {
        "tags" : [ "Widget" ],
        "description" : "Get a domain level workflow widget",
        "operationId" : "getWidgetForWorkflowPacketDomain",
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WidgetDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/automation/{workflowPacketAutomationId}/archive/{ids}" : {
      "get" : {
        "tags" : [ "Packet Automation" ],
        "description" : "Generate an archive of automation script files for the specified automation records",
        "operationId" : "archiveCliCommands",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "workflowPacketAutomationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "ids",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/zip" : { }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/automation/{workflowPacketAutomationId}/result/{id}/script" : {
      "get" : {
        "tags" : [ "Packet Automation" ],
        "description" : "Generate an automation script file for the specified automation record",
        "operationId" : "generateCliCommandScript",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "workflowPacketAutomationId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "text/plain" : { }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/packet-task/{workflowPacketTaskId}/automation/generate" : {
      "post" : {
        "tags" : [ "Packet Automation" ],
        "description" : "Generate automation details for a workflow packet. Optionally limited to certain devices",
        "operationId" : "generateCliForPacket",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "workflowPacketTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowPacketAutomationDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/packet/{workflowPacketId}/completed/automation" : {
      "get" : {
        "tags" : [ "Packet Automation" ],
        "description" : "Get automation details for a workflow packet",
        "operationId" : "getCliForCompletedPacket",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowPacketAutomationDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/packet-task/{workflowPacketTaskId}/automation" : {
      "get" : {
        "tags" : [ "Packet Automation" ],
        "description" : "Get automation details for a workflow packet",
        "operationId" : "getCliForPacket",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "workflowPacketTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WorkflowPacketAutomationDTO"
                }
              }
            }
          }
        }
      }
    },
    "/domain/{domainId}/workflow/{workflowId}/task/{workflowTaskId}/packet/{workflowPacketId}/packet-task/{workflowPacketTaskId}/changes/automate" : {
      "post" : {
        "tags" : [ "Packet Automation" ],
        "description" : "Perform automation on the requested specific change(s)",
        "operationId" : "performAutomation",
        "parameters" : [ {
          "name" : "domainId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "workflowPacketId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "workflowPacketTaskId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "changeId",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "*/*" : { }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AuthRequestDTO" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "AuthResponseDTO" : {
        "type" : "object",
        "properties" : {
          "authorized" : {
            "type" : "boolean"
          },
          "authCode" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authStatus" : {
            "type" : "string",
            "enum" : [ "AUTHORIZED", "NOT_AUTHORIZED", "EXPIRED" ]
          },
          "message" : {
            "type" : "string"
          },
          "token" : {
            "type" : "string"
          },
          "tokenTTL" : {
            "type" : "integer",
            "format" : "int32"
          },
          "licenseExpireDays" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ConfigPropertyLayoutDTO" : {
        "required" : [ "layout" ],
        "type" : "object",
        "properties" : {
          "domainId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "productKey" : {
            "type" : "string",
            "enum" : [ "SM", "PP", "PO", "RA", "LA", "GPC", "ORCH", "AUTO" ]
          },
          "layout" : {
            "type" : "string",
            "description" : "JSON layout for application settings"
          }
        }
      },
      "AbstractConfigPropertyDTO" : {
        "required" : [ "name", "type", "value" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "object"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "BOOLEAN", "INTEGER", "STRING" ]
          },
          "domainId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "globalOnly" : {
            "type" : "boolean"
          },
          "hidden" : {
            "type" : "boolean"
          },
          "secret" : {
            "type" : "boolean"
          }
        },
        "discriminator" : {
          "propertyName" : "type"
        }
      },
      "BooleanConfigPropertyDTO" : {
        "required" : [ "name", "type", "value" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AbstractConfigPropertyDTO"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "boolean"
            }
          }
        } ]
      },
      "IntegerConfigPropertyDTO" : {
        "required" : [ "name", "type", "value" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AbstractConfigPropertyDTO"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ]
      },
      "StringConfigPropertyDTO" : {
        "required" : [ "name", "type", "value" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/AbstractConfigPropertyDTO"
        }, {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string"
            }
          }
        } ]
      },
      "EnvironmentDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "LoggingConfigDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "environment" : {
            "$ref" : "#/components/schemas/EnvironmentDTO"
          },
          "loggingLevels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LoggingLevelDTO"
            }
          }
        }
      },
      "LoggingLevelDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "logger" : {
            "type" : "string"
          },
          "level" : {
            "type" : "string"
          },
          "inherited" : {
            "type" : "boolean"
          }
        }
      },
      "PreferenceDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "BOOLEAN", "LANGUAGE", "LIST", "MAP", "NUMBER", "STRING" ]
          },
          "defaultvalue" : {
            "type" : "string"
          }
        }
      },
      "SearchResultDTOPreferenceDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/PreferenceDTO"
            }
          }
        }
      },
      "UserPreferenceDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "userid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "preference" : {
            "$ref" : "#/components/schemas/PreferenceDTO"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "UserLanguagePreferenceDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "userid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "preference" : {
            "$ref" : "#/components/schemas/PreferenceDTO"
          },
          "value" : {
            "type" : "string"
          },
          "languageDisplay" : {
            "type" : "string"
          }
        }
      },
      "VersionDTO" : {
        "type" : "object",
        "properties" : {
          "fmosVersion" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "platformVersion" : {
            "type" : "string"
          },
          "hostName" : {
            "type" : "string"
          },
          "hostIp" : {
            "type" : "string"
          }
        }
      },
      "EmailTemplateDTO" : {
        "required" : [ "description", "key", "recipient", "subject", "title" ],
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "title" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "workflowVersionId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "recipient" : {
            "type" : "string"
          },
          "bodyHtml" : {
            "type" : "string"
          },
          "bodyText" : {
            "type" : "string"
          },
          "carbonCopy" : {
            "type" : "string"
          },
          "blindCarbonCopy" : {
            "type" : "string"
          },
          "subject" : {
            "type" : "string"
          }
        }
      },
      "NdChangeUserDTO" : {
        "required" : [ "changeDate", "userName" ],
        "type" : "object",
        "properties" : {
          "userName" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "NdObjectTagDTO" : {
        "required" : [ "name", "tagType" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "tagType" : {
            "type" : "string",
            "enum" : [ "NAME_VALUE", "SINGLE" ]
          }
        }
      },
      "ObjectNode" : {
        "type" : "object"
      },
      "ScopeDTO" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "ndError" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "rawText" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "matchId" : {
            "type" : "string"
          },
          "changeUsers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NdChangeUserDTO"
            }
          },
          "objectTags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NdObjectTagDTO"
            }
          },
          "supplementalInfo" : {
            "$ref" : "#/components/schemas/ObjectNode"
          },
          "derived" : {
            "type" : "boolean"
          },
          "system" : {
            "type" : "boolean"
          },
          "availableScopes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScopeDTO"
            }
          }
        }
      },
      "UserDTO" : {
        "required" : [ "username" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Unique identifier for this user",
            "format" : "int32"
          },
          "domainId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "username" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "firstName" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "lastName" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "email" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "password" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "existingPassword" : {
            "maxLength" : 255,
            "minLength" : 0,
            "type" : "string"
          },
          "passwordExpired" : {
            "type" : "boolean"
          },
          "locked" : {
            "type" : "boolean"
          },
          "expired" : {
            "type" : "boolean"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "scope" : {
            "$ref" : "#/components/schemas/ScopeDTO"
          },
          "lastLogin" : {
            "type" : "string",
            "description" : "The date/time of this user's last login",
            "format" : "date-time"
          },
          "previousLogin" : {
            "type" : "string",
            "description" : "The date/time of this user's penultimate login",
            "format" : "date-time"
          },
          "passwordChanged" : {
            "type" : "string",
            "description" : "The date/time that this user's password was last changed",
            "format" : "date-time"
          },
          "authType" : {
            "type" : "string",
            "description" : "The method by which this user is authenticated. A null value indicates the user is authenticated by server priority",
            "enum" : [ "LOCAL", "LDAP", "AD", "RADIUS", "SAML" ]
          },
          "authServerId" : {
            "type" : "integer",
            "description" : "The authentication server that this user is authenticated against. If this value is null, authentication is performed across all servers of the type specified by authType",
            "format" : "int32"
          }
        },
        "description" : "Representation of a User instance"
      },
      "EmailTemplateCollectionDTO" : {
        "type" : "object",
        "properties" : {
          "templates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EmailTemplateDTO"
            }
          }
        }
      },
      "SearchResultDTOWorkflowEventLogDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowEventLogDTO"
            }
          }
        }
      },
      "WorkflowEventLogDTO" : {
        "type" : "object",
        "properties" : {
          "event" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "createDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "detail" : {
            "type" : "string"
          }
        },
        "description" : "Results container"
      },
      "WorkflowDTO" : {
        "required" : [ "domainId", "name" ],
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "productKey" : {
            "type" : "string",
            "enum" : [ "SM", "PP", "PO", "RA", "LA", "GPC", "ORCH", "AUTO" ]
          },
          "domainId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "domainName" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "pluginGroupId" : {
            "type" : "string"
          },
          "pluginArtifactId" : {
            "type" : "string"
          },
          "latestPluginVersion" : {
            "type" : "string"
          },
          "updateWorkflow" : {
            "type" : "boolean"
          },
          "externalWorkflow" : {
            "type" : "boolean"
          },
          "editableWorkflow" : {
            "type" : "boolean"
          },
          "disabled" : {
            "type" : "boolean"
          },
          "config" : {
            "$ref" : "#/components/schemas/ObjectNode"
          },
          "packetPrefix" : {
            "type" : "string"
          }
        }
      },
      "WorkflowEventBeanSequenceDTO" : {
        "required" : [ "sequence" ],
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sequence" : {
            "type" : "integer",
            "format" : "int32"
          },
          "handler" : {
            "$ref" : "#/components/schemas/WorkflowEventHandlerDTO"
          },
          "beanType" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "string",
            "description" : "JSON formatted settings"
          }
        }
      },
      "WorkflowEventHandlerDTO" : {
        "required" : [ "event" ],
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "workflowVersion" : {
            "$ref" : "#/components/schemas/WorkflowVersionDTO"
          },
          "taskKey" : {
            "type" : "string"
          },
          "fieldName" : {
            "type" : "string"
          },
          "pathKey" : {
            "type" : "string"
          },
          "event" : {
            "type" : "string",
            "enum" : [ "WORKFLOW_PACKET_CREATED", "WORKFLOW_PACKET_COMPLETED", "WORKFLOW_PACKET_CANCELLED", "WORKFLOW_PACKET_TASK_CREATED", "WORKFLOW_PACKET_TASK_ASSIGNED", "WORKFLOW_PACKET_TASK_UNASSIGNED", "WORKFLOW_PACKET_TASK_PATH_TAKEN", "WORKFLOW_PACKET_TASK_COMPLETED", "WORKFLOW_PACKET_SYSTEM_VARIABLE_CREATED", "WORKFLOW_PACKET_SYSTEM_VARIABLE_UPDATED", "WORKFLOW_PACKET_SYSTEM_VARIABLE_REMOVED", "UNSUPPORTED" ]
          }
        }
      },
      "WorkflowVersionDTO" : {
        "required" : [ "processDefinitionId" ],
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "workflow" : {
            "$ref" : "#/components/schemas/WorkflowDTO"
          },
          "processDefinitionId" : {
            "type" : "string"
          },
          "pluginVersion" : {
            "type" : "string"
          },
          "buildDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "legacyEngine" : {
            "type" : "boolean"
          },
          "legacyTemplates" : {
            "type" : "boolean"
          }
        },
        "description" : "Results container"
      },
      "SearchResultDTOWorkflowEventBeanSequenceDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowEventBeanSequenceDTO"
            }
          }
        }
      },
      "SearchResultDTOWorkflowEventHandlerDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowEventHandlerDTO"
            }
          }
        }
      },
      "WorkflowFieldDTO" : {
        "required" : [ "filterable", "type", "workflowId" ],
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "STRING", "INTEGER", "BOOLEAN", "DATE", "USER", "STRING_ARRAY", "CORE" ]
          },
          "label" : {
            "type" : "string"
          },
          "input" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "format" : {
            "type" : "string"
          },
          "filterable" : {
            "type" : "boolean"
          },
          "workflowId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "reserved" : {
            "type" : "boolean"
          },
          "formJson" : {
            "$ref" : "#/components/schemas/ObjectNode"
          }
        }
      },
      "SearchResultDTOWorkflowFieldDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowFieldDTO"
            }
          }
        }
      },
      "WorkflowFieldCollectionDTO" : {
        "type" : "object",
        "properties" : {
          "workflowFields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowFieldDTO"
            }
          }
        }
      },
      "ReservedFieldDTO" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "propertyType" : {
            "type" : "string",
            "enum" : [ "STRING", "INTEGER", "BOOLEAN", "DATE", "USER", "STRING_ARRAY", "CORE" ]
          },
          "format" : {
            "type" : "string"
          },
          "input" : {
            "type" : "string"
          },
          "options" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          },
          "category" : {
            "type" : "string",
            "enum" : [ "PACKET", "REQUIREMENT" ]
          },
          "filterable" : {
            "type" : "boolean"
          },
          "productKey" : {
            "type" : "string",
            "enum" : [ "SM", "PO", "PP", "RA", "GPC", "AUTO" ]
          }
        }
      },
      "WorkflowPacketAttachmentCollectionDTO" : {
        "type" : "object",
        "properties" : {
          "attachments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowPacketAttachmentDTO"
            }
          }
        }
      },
      "WorkflowPacketAttachmentDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "workflowPacketId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "uuid" : {
            "type" : "string"
          },
          "contentType" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "AssessmentDTO" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "domainId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "system" : {
            "type" : "boolean"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "parts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentPartDTO"
            }
          },
          "controlCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "assignedDeviceCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "assignedDeviceGroupCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "copyrighted" : {
            "type" : "boolean"
          }
        }
      },
      "AssessmentPartDTO" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "CONTROL", "SECTION", "TEXT" ]
          },
          "name" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          },
          "controlId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "text" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "boolean"
          }
        }
      },
      "AuthServerGroupMappingDTO" : {
        "required" : [ "allAuthenticatedUsers", "groupNames", "userGroupId" ],
        "type" : "object",
        "properties" : {
          "userGroupId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "authServerId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "userGroupName" : {
            "type" : "string"
          },
          "authServerName" : {
            "type" : "string"
          },
          "allAuthenticatedUsers" : {
            "type" : "boolean"
          },
          "groupNames" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Authentication server group mappings associated with this user group"
      },
      "CompliancePackageDTO" : {
        "type" : "object",
        "properties" : {
          "assessments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssessmentDTO"
            }
          },
          "controls" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ControlDTO"
            }
          },
          "zones" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ZoneDTO"
            }
          },
          "services" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ServiceDTO"
            }
          }
        }
      },
      "ControlDTO" : {
        "required" : [ "controlType", "domainId", "id", "name", "properties", "severity", "system" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "controlCode" : {
            "type" : "string"
          },
          "controlType" : {
            "type" : "string",
            "enum" : [ "ALLOWED_SERVICES", "CHANGE_WINDOW_VIOLATION", "DEVICE_ACCESS_ANALYSIS", "DEVICE_PROPERTY", "DEVICE_STATUS", "NETWORK_ACCESS_ANALYSIS", "REGEX", "REGEX_MULTIPATTERN", "RULE_SEARCH", "RULE_USAGE", "SERVICE_RISK_ANALYSIS", "ZONE_MATRIX", "ZONE_BASED_RULE_SEARCH" ]
          },
          "domainId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "severity" : {
            "maximum" : 9,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "system" : {
            "type" : "boolean"
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ControlPropertyDTO"
            }
          },
          "filters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ControlFilterDTO"
            }
          },
          "tags" : {
            "type" : "string"
          },
          "passText" : {
            "type" : "string"
          },
          "failText" : {
            "type" : "string"
          },
          "infoText" : {
            "type" : "string"
          },
          "recommendationText" : {
            "type" : "string"
          }
        }
      },
      "ControlFilterDTO" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "DEVICE_TYPE", "VENDOR", "DEVICE_NAME" ]
          },
          "deviceType" : {
            "type" : "string",
            "enum" : [ "APPLICATION_LIBRARY", "APPLICATION", "CLOUD", "CLOUD_PROVIDER", "DEVICE_MGR", "EDGE", "FIREWALL", "LOG", "OS", "ROUTER_SWITCH", "TRAFFIC_MGMT", "VPN" ]
          },
          "vendor" : {
            "type" : "string"
          },
          "deviceName" : {
            "type" : "string"
          }
        }
      },
      "ControlPropertyDTO" : {
        "required" : [ "name", "required", "type" ],
        "type" : "object",
        "properties" : {
          "controlId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "controlType" : {
            "type" : "string",
            "enum" : [ "ALLOWED_SERVICES", "CHANGE_WINDOW_VIOLATION", "DEVICE_ACCESS_ANALYSIS", "DEVICE_PROPERTY", "DEVICE_STATUS", "NETWORK_ACCESS_ANALYSIS", "REGEX", "REGEX_MULTIPATTERN", "RULE_SEARCH", "RULE_USAGE", "SERVICE_RISK_ANALYSIS", "ZONE_MATRIX", "ZONE_BASED_RULE_SEARCH" ]
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "BOOLEAN", "INTEGER", "IP_PACKET", "SAVED_FILTER", "SERVICE", "STRING", "ZONE" ]
          },
          "displayName" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "required" : {
            "type" : "boolean"
          },
          "booleanValue" : {
            "type" : "boolean"
          },
          "integerValue" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sourceIp" : {
            "type" : "string"
          },
          "destinationIp" : {
            "type" : "string"
          },
          "protocol" : {
            "type" : "string",
            "enum" : [ "TCP", "UDP", "ICMP" ]
          },
          "port" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "icmpType" : {
            "maximum" : 255,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "icmpCode" : {
            "maximum" : 255,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "serviceName" : {
            "type" : "string"
          },
          "string" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string"
          },
          "zoneName" : {
            "maxLength" : 255,
            "minLength" : 1,
            "type" : "string"
          },
          "savedFilter" : {
            "$ref" : "#/components/schemas/SavedFilterDTO"
          }
        }
      },
      "SavedFilterDTO" : {
        "required" : [ "context", "filter", "name", "subContext" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "filter" : {
            "type" : "string"
          },
          "system" : {
            "type" : "boolean"
          },
          "context" : {
            "type" : "string",
            "enum" : [ "APPLICATION_OBJECT", "CHANGES", "CONTROL_QUERY_STRING", "CONTROL_RESULTS", "DEVICES", "INTERFACES", "NAT_RULE", "NETWORK_OBJECT", "REVIEW", "REVISIONS", "ROUTES", "SCHEDULES", "SCOPES", "SECURITY_PROFILES", "SECURITY_RULE", "SERVICE_OBJECT", "TICKET", "URL_MATCHER", "USER_OBJECT", "ZONES" ]
          },
          "subContext" : {
            "type" : "string",
            "enum" : [ "APPLICATION_OBJECT_LIST", "CHANGES_LIST", "CONTROL_RESULTS_LIST", "DEVICES_LIST", "DEVICES_MANAGEMENT_STATIONS_LIST", "DEVICES_NON_MANAGEMENT_STATIONS_LIST", "INTERFACES_LIST", "NAT_RULE_LIST", "NETWORK_OBJECT_LIST", "REVIEW_LIST", "REVISIONS_LIST", "ROUTES_LIST", "RULE_SEARCH_CONTROL", "SCHEDULES_LIST", "SCOPES_LIST", "SECURITY_PROFILES_LIST", "SECURITY_RULE_LIST", "SERVICE_OBJECT_LIST", "TICKET_LIST", "URL_MATCHER_LIST", "USER_OBJECT_LIST", "ZONES_LIST", "ZONE_BASED_RULE_SEARCH_CONTROL" ]
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "favorite" : {
            "type" : "boolean"
          },
          "shared" : {
            "type" : "boolean"
          },
          "sharedUserGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserGroupDTO"
            }
          }
        }
      },
      "ServiceDTO" : {
        "required" : [ "defaultRisk", "domainId", "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid"
          },
          "domainId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "TCP", "UDP", "ICMP", "ICMPV6", "OTHER", "GROUP", "ANY" ]
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "vulnerability" : {
            "type" : "string"
          },
          "defaultRisk" : {
            "type" : "string",
            "enum" : [ "LOW", "MEDIUM", "HIGH", "CRITICAL" ]
          },
          "port" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "portEnd" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "icmpType" : {
            "maximum" : 255,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "icmpCode" : {
            "maximum" : 255,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "protocolNumber" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "UserGroupDTO" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "ID of the user group",
            "format" : "int32"
          },
          "domainId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the user group"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the user group"
          },
          "userCount" : {
            "type" : "integer",
            "description" : "Number of users in user group",
            "format" : "int32"
          },
          "authServerGroupMappings" : {
            "type" : "array",
            "description" : "Authentication server group mappings associated with this user group",
            "items" : {
              "$ref" : "#/components/schemas/AuthServerGroupMappingDTO"
            }
          }
        }
      },
      "ZoneDTO" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "hexColor" : {
            "type" : "string"
          }
        }
      },
      "SearchResultDTOWorkflowPacketAttachmentDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowPacketAttachmentDTO"
            }
          }
        }
      },
      "WorkflowPacketCommentDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "workflowPacketId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "comment" : {
            "type" : "string"
          }
        }
      },
      "SearchResultDTOWorkflowPacketCommentDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowPacketCommentDTO"
            }
          }
        }
      },
      "ChangeCriteriaDTO" : {
        "required" : [ "pattern" ],
        "type" : "object",
        "properties" : {
          "pattern" : {
            "type" : "string"
          },
          "timeoutSeconds" : {
            "type" : "integer",
            "format" : "int32"
          },
          "continueMatch" : {
            "type" : "boolean"
          },
          "parentUserName" : {
            "type" : "string"
          },
          "defaultUserName" : {
            "type" : "string"
          },
          "retrieveOnMatch" : {
            "type" : "boolean"
          },
          "stopMatching" : {
            "type" : "boolean"
          }
        }
      },
      "CollectionConfigDTO" : {
        "required" : [ "devicePackId", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "devicePackId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "devicePackVendor" : {
            "type" : "string"
          },
          "devicePackDeviceType" : {
            "type" : "string",
            "enum" : [ "APPLICATION_LIBRARY", "APPLICATION", "CLOUD", "CLOUD_PROVIDER", "DEVICE_MGR", "EDGE", "FIREWALL", "LOG", "OS", "ROUTER_SWITCH", "TRAFFIC_MGMT", "VPN" ]
          },
          "devicePackDeviceName" : {
            "type" : "string"
          },
          "devicePackGroupId" : {
            "type" : "string",
            "readOnly" : true
          },
          "devicePackArtifactId" : {
            "type" : "string",
            "readOnly" : true
          },
          "description" : {
            "type" : "string"
          },
          "syslogEncoding" : {
            "type" : "string"
          },
          "changePattern" : {
            "type" : "string"
          },
          "changeCriterion" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ChangeCriteriaDTO"
            }
          },
          "usagePattern" : {
            "type" : "string"
          },
          "usageCriterion" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UsageCriteriaDTO"
            }
          },
          "activatedDeviceIds" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "readOnly" : true
            }
          },
          "usageKeys" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "POLICY_NAME", "RULE_ID", "RULE_NAME", "RULE_NUMBER" ]
            }
          },
          "activatedForDevicePack" : {
            "type" : "boolean"
          }
        }
      },
      "DeviceClusterDTO" : {
        "required" : [ "domainId", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "domainId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "activeDeviceId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deviceIds" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }
      },
      "DeviceDTO" : {
        "required" : [ "devicePack", "domainId", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "domainId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "managementIp" : {
            "type" : "string"
          },
          "parents" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceRelativeDTO"
            }
          },
          "children" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceRelativeDTO"
            }
          },
          "collectorGroupId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "collectorGroupName" : {
            "type" : "string"
          },
          "centralSyslogId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "syslogMatchNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "securityConcernIndex" : {
            "type" : "number",
            "format" : "float"
          },
          "licenses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SM", "PO", "PP", "RA", "GPC", "AUTO" ]
            }
          },
          "devicePack" : {
            "$ref" : "#/components/schemas/DevicePackDTO"
          },
          "gpcDirtyDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "gpcComputeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "gpcImplementDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionConfig" : {
            "$ref" : "#/components/schemas/CollectionConfigDTO"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "PENDING", "REMOVED" ]
          },
          "managedType" : {
            "type" : "string",
            "enum" : [ "MANAGED", "MANUAL" ]
          },
          "extendedSettingsJson" : {
            "type" : "string",
            "description" : "JSON formatted settings"
          },
          "cluster" : {
            "$ref" : "#/components/schemas/DeviceClusterDTO"
          },
          "status" : {
            "$ref" : "#/components/schemas/DeviceStatusDTO"
          },
          "version" : {
            "type" : "string"
          },
          "editable" : {
            "type" : "boolean"
          },
          "gpcStatus" : {
            "type" : "string",
            "enum" : [ "NOT_SUPPORTED", "NOT_IMPORTED", "QUEUED_FOR_IMPORT", "IMPORTING", "IMPORTED", "ERROR", "PENDING_DELETE" ]
          },
          "updateMemberRuleDoc" : {
            "type" : "boolean"
          },
          "accessExists" : {
            "type" : "boolean"
          }
        }
      },
      "DevicePackDTO" : {
        "required" : [ "artifactId", "groupId" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "DEVICE_PACK", "LANGUAGE", "REPORT", "SCANNER", "WORKFLOW" ]
          },
          "artifactId" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "artifacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PluginArtifactDTO"
            }
          },
          "buildDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deviceName" : {
            "type" : "string"
          },
          "deviceType" : {
            "type" : "string",
            "enum" : [ "APPLICATION_LIBRARY", "APPLICATION", "CLOUD", "CLOUD_PROVIDER", "DEVICE_MGR", "EDGE", "FIREWALL", "LOG", "OS", "ROUTER_SWITCH", "TRAFFIC_MGMT", "VPN" ]
          },
          "vendor" : {
            "type" : "string"
          },
          "collectionConfig" : {
            "$ref" : "#/components/schemas/CollectionConfigDTO"
          },
          "behaviorTranslator" : {
            "type" : "string"
          },
          "normalization" : {
            "type" : "boolean"
          },
          "usage" : {
            "type" : "boolean"
          },
          "change" : {
            "type" : "boolean"
          },
          "usageSyslog" : {
            "type" : "boolean"
          },
          "changeSyslog" : {
            "type" : "boolean"
          },
          "active" : {
            "type" : "boolean"
          },
          "supportsDiff" : {
            "type" : "boolean"
          },
          "supportsManualRetrieval" : {
            "type" : "boolean"
          },
          "implicitDrop" : {
            "type" : "boolean"
          },
          "diffDynamicRoutes" : {
            "type" : "boolean"
          },
          "automation" : {
            "type" : "boolean"
          },
          "lookupNoIntfRoutes" : {
            "type" : "boolean"
          },
          "automationCli" : {
            "type" : "boolean"
          },
          "ssh" : {
            "type" : "boolean"
          },
          "sharedNetworks" : {
            "type" : "boolean"
          },
          "sharedServices" : {
            "type" : "boolean"
          },
          "supportedTypes" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "APPLICATIONS", "POLICY_ROUTES", "SCOPES", "USERS", "ZONES" ]
            }
          },
          "diffIgnorePatterns" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "convertableTo" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DevicePackRefDTO"
            }
          }
        }
      },
      "DevicePackRefDTO" : {
        "type" : "object",
        "properties" : {
          "deviceName" : {
            "type" : "string"
          },
          "deviceType" : {
            "type" : "string",
            "enum" : [ "APPLICATION_LIBRARY", "APPLICATION", "CLOUD", "CLOUD_PROVIDER", "DEVICE_MGR", "EDGE", "FIREWALL", "LOG", "OS", "ROUTER_SWITCH", "TRAFFIC_MGMT", "VPN" ]
          },
          "vendor" : {
            "type" : "string"
          },
          "artifactId" : {
            "type" : "string"
          },
          "groupId" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "DeviceRelativeDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "domainId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "managementIp" : {
            "type" : "string"
          },
          "vendor" : {
            "type" : "string"
          },
          "deviceType" : {
            "type" : "string",
            "enum" : [ "APPLICATION_LIBRARY", "APPLICATION", "CLOUD", "CLOUD_PROVIDER", "DEVICE_MGR", "EDGE", "FIREWALL", "LOG", "OS", "ROUTER_SWITCH", "TRAFFIC_MGMT", "VPN" ]
          },
          "state" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "PENDING", "REMOVED" ]
          },
          "licenses" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SM", "PO", "PP", "RA", "GPC", "AUTO" ]
            }
          }
        }
      },
      "DeviceStatusDTO" : {
        "required" : [ "deviceId" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "changeStatus" : {
            "type" : "string"
          },
          "changeLastUpdated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "changeStatusDescription" : {
            "type" : "string"
          },
          "logStatus" : {
            "type" : "string"
          },
          "logLastUpdated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "logStatusDescription" : {
            "type" : "string"
          },
          "retrievalStatus" : {
            "type" : "string"
          },
          "retrievalLastUpdated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "retrievalStatusDescription" : {
            "type" : "string"
          }
        }
      },
      "FirewallObjectDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "APP", "NETWORK", "PROFILE", "SCHEDULE", "SERVICE", "URL_MATCHER", "USER", "ZONE" ]
          },
          "matchId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "device" : {
            "$ref" : "#/components/schemas/DeviceDTO"
          },
          "lastChangeConfigRevId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "createDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastUpdated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastUsed" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "NdChangeLogDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "action" : {
            "type" : "string",
            "enum" : [ "ADD", "MODIFY", "REMOVE", "SEMANTIC" ]
          },
          "objectType" : {
            "type" : "string",
            "enum" : [ "APP_OBJECT", "DEVICE_PROP", "INTERFACE", "NAT_RULE", "NETWORK_OBJECT", "POLICY", "PROFILE_OBJECT", "ROUTE", "SCHEDULE_OBJECT", "SCOPE", "SECURITY_RULE", "SERVICE_OBJECT", "URL_MATCHER", "USER_OBJECT", "VIRTUAL_ROUTER", "ZONE" ]
          },
          "objectMatchId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "objectName" : {
            "type" : "string"
          },
          "summary" : {
            "type" : "string"
          },
          "changeDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "ndConfigRevId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ndConfigRevAction" : {
            "type" : "string",
            "enum" : [ "AUTOMATIC", "INSTALL", "MANUAL", "SAVE", "SCHEDULED", "MIGRATE", "IMPORT" ]
          },
          "ndConfigRevStatus" : {
            "type" : "string",
            "enum" : [ "RAW", "INPROCESS", "RETRY", "WAITING_PARENT", "FINALIZING", "NORMALIZED", "NORMALIZATION_ERROR", "RETRIEVAL_ERROR", "ARCHIVED" ]
          },
          "changeUser" : {
            "type" : "string"
          },
          "changeUsers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NdChangeUserDTO"
            }
          },
          "deviceId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deviceName" : {
            "type" : "string"
          },
          "deviceType" : {
            "type" : "string",
            "enum" : [ "APPLICATION_LIBRARY", "APPLICATION", "CLOUD", "CLOUD_PROVIDER", "DEVICE_MGR", "EDGE", "FIREWALL", "LOG", "OS", "ROUTER_SWITCH", "TRAFFIC_MGMT", "VPN" ]
          },
          "managedType" : {
            "type" : "string",
            "enum" : [ "MANAGED", "MANUAL" ]
          },
          "changeLogRefs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NdChangeLogDTO"
            }
          }
        }
      },
      "PluginArtifactDTO" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "checksum" : {
            "type" : "string"
          }
        }
      },
      "PolicyPlanChangeDTO" : {
        "required" : [ "changeType", "deviceId", "implementationStatus", "requirementType", "type" ],
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "policyPlanRequirementId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ndChangeLogs" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NdChangeLogDTO"
            }
          },
          "deviceId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deviceName" : {
            "type" : "string"
          },
          "deviceType" : {
            "type" : "string"
          },
          "deviceManagementIp" : {
            "type" : "string"
          },
          "deviceParents" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceDTO"
            }
          },
          "devicePackGroupId" : {
            "type" : "string"
          },
          "devicePackArtifactId" : {
            "type" : "string"
          },
          "deviceSupportedTypes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "APPLICATIONS", "POLICY_ROUTES", "SCOPES", "USERS", "ZONES" ]
            }
          },
          "summary" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "STRUCTURED", "UNSTRUCTURED", "RECOMMENDED" ]
          },
          "changed" : {
            "type" : "boolean"
          },
          "requirementType" : {
            "type" : "string",
            "enum" : [ "GENERAL", "NONE", "RULE", "CLONE", "DECOM" ]
          },
          "changeType" : {
            "type" : "string",
            "enum" : [ "GENERAL", "OBJECT", "RULE" ]
          },
          "commands" : {
            "type" : "string"
          },
          "businessKey" : {
            "type" : "string"
          },
          "businessKeySequence" : {
            "type" : "integer",
            "format" : "int64"
          },
          "implementationStatus" : {
            "type" : "string",
            "enum" : [ "IMPLEMENTED", "PENDING", "QUEUED", "RUNNING", "STAGED", "UNIMPLEMENTED" ]
          },
          "implementationComment" : {
            "type" : "string"
          },
          "verificationStatus" : {
            "type" : "string",
            "enum" : [ "UNVERIFIED", "UNVERIFIED_REJECTED", "VERIFIED_PARTIAL", "VERIFIED", "VERIFICATION_NA" ]
          },
          "verificationComment" : {
            "type" : "string"
          },
          "automatable" : {
            "type" : "boolean"
          },
          "scope" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "changeType"
        }
      },
      "PolicyPlanCloneRequirementDTO" : {
        "required" : [ "requirementType" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyPlanRequirementDTO"
        }, {
          "type" : "object",
          "properties" : {
            "sourceIp" : {
              "type" : "string"
            },
            "addressesToClone" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : {
              "type" : "string"
            }
          }
        } ]
      },
      "PolicyPlanDecomRequirementDTO" : {
        "required" : [ "addresses", "description", "requirementType" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyPlanRequirementDTO"
        }, {
          "type" : "object",
          "properties" : {
            "addresses" : {
              "maxItems" : 2147483647,
              "minItems" : 1,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : {
              "type" : "string"
            }
          }
        } ]
      },
      "PolicyPlanGeneralChangeDTO" : {
        "required" : [ "changeType", "deviceId", "implementationStatus", "requirementType", "type" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyPlanChangeDTO"
        }, {
          "type" : "object",
          "properties" : {
            "details" : {
              "type" : "string"
            }
          }
        } ]
      },
      "PolicyPlanGeneralRequirementDTO" : {
        "required" : [ "requirementType" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyPlanRequirementDTO"
        }, {
          "type" : "object",
          "properties" : {
            "description" : {
              "type" : "string"
            }
          }
        } ]
      },
      "PolicyPlanNetworkAddressDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "address" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "IPV4", "IPV6" ]
          },
          "objectType" : {
            "type" : "string",
            "enum" : [ "HOST", "NETWORK", "RANGE" ]
          }
        }
      },
      "PolicyPlanNetworkObjectDTO" : {
        "required" : [ "ipStackType", "objectType", "type" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyPlanObjectDTO"
        }, {
          "type" : "object",
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "SINGLE", "GROUP", "ANY" ]
            },
            "ipStackType" : {
              "type" : "string",
              "enum" : [ "IPV4", "IPV6", "DUAL" ]
            },
            "addresses" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/PolicyPlanNetworkAddressDTO"
              }
            },
            "fqdn" : {
              "type" : "string"
            }
          }
        } ]
      },
      "PolicyPlanNoneRequirementDTO" : {
        "required" : [ "requirementType" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyPlanRequirementDTO"
        } ]
      },
      "PolicyPlanObjectChangeDTO" : {
        "required" : [ "action", "changeType", "deviceId", "implementationStatus", "requirementType", "type" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyPlanChangeDTO"
        }, {
          "type" : "object",
          "properties" : {
            "action" : {
              "type" : "string",
              "enum" : [ "CREATE", "MODIFY", "DELETE", "NONE" ]
            },
            "referencedObject" : {
              "$ref" : "#/components/schemas/PolicyPlanObjectDTO"
            },
            "testedObject" : {
              "$ref" : "#/components/schemas/PolicyPlanObjectDTO"
            }
          }
        } ]
      },
      "PolicyPlanObjectDTO" : {
        "required" : [ "objectType" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "comment" : {
            "type" : "string"
          },
          "objectId" : {
            "type" : "string"
          },
          "original" : {
            "type" : "boolean"
          },
          "members" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanObjectDTO"
            }
          },
          "objectType" : {
            "type" : "string",
            "enum" : [ "NETWORK", "SERVICE" ]
          }
        },
        "discriminator" : {
          "propertyName" : "objectType"
        }
      },
      "PolicyPlanProtocolPortDTO" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "TCP", "UDP", "OTHER", "ICMP", "ICMP_ANY" ]
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "protocol" : {
            "type" : "integer",
            "format" : "int32"
          },
          "srcStartPort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "srcEndPort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startPort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "endPort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "icmpType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "icmpCode" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PolicyPlanRequirementDTO" : {
        "required" : [ "requirementType" ],
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "workflowPacketId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "requirementType" : {
            "type" : "string",
            "enum" : [ "GENERAL", "NONE", "RULE", "CLONE", "DECOM" ]
          },
          "changePlanReviewDecision" : {
            "type" : "string",
            "enum" : [ "APPROVED", "REJECTED", "UNDECIDED" ]
          },
          "childKey" : {
            "type" : "string"
          },
          "businessKey" : {
            "type" : "string"
          },
          "businessKeySequence" : {
            "type" : "integer",
            "format" : "int64"
          },
          "planned" : {
            "type" : "boolean"
          },
          "changes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanChangeDTO"
            }
          },
          "variables" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        },
        "discriminator" : {
          "propertyName" : "requirementType"
        }
      },
      "PolicyPlanRuleAppObjectDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "policyPlanRuleId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "APP", "DESTINATION", "DEST_ZONE", "PROFILE", "SCHEDULE", "SERVICE", "SOURCE", "SOURCE_ZONE", "URL_MATCHER", "USER" ]
          },
          "objectType" : {
            "type" : "string",
            "enum" : [ "APP", "NETWORK", "PROFILE", "SCHEDULE", "SERVICE", "URL_MATCHER", "USER", "ZONE" ]
          },
          "object" : {
            "$ref" : "#/components/schemas/FirewallObjectDTO"
          },
          "ppObject" : {
            "$ref" : "#/components/schemas/PolicyPlanObjectDTO"
          }
        }
      },
      "PolicyPlanRuleChangeDTO" : {
        "required" : [ "changeType", "deviceId", "implementationStatus", "requirementType", "type" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyPlanChangeDTO"
        }, {
          "type" : "object",
          "properties" : {
            "action" : {
              "type" : "string",
              "enum" : [ "CREATE", "MODIFY", "DELETE", "NONE" ]
            },
            "location" : {
              "type" : "string",
              "enum" : [ "ABOVE", "BELOW" ]
            },
            "policyName" : {
              "type" : "string"
            },
            "policyDisplayName" : {
              "type" : "string"
            },
            "policyUUID" : {
              "type" : "string"
            },
            "testedRule" : {
              "$ref" : "#/components/schemas/PolicyPlanRuleDTO"
            },
            "referencedRules" : {
              "uniqueItems" : true,
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/PolicyPlanRuleDTO"
              }
            },
            "recommendedRule" : {
              "$ref" : "#/components/schemas/PolicyPlanRuleDTO"
            },
            "useRoutes" : {
              "type" : "boolean"
            },
            "routeSrc" : {
              "type" : "string"
            },
            "routeSrcInterface" : {
              "type" : "string"
            },
            "routeSrcName" : {
              "type" : "string"
            },
            "routeDest" : {
              "type" : "string"
            },
            "routeDestInterface" : {
              "type" : "string"
            },
            "routeDestName" : {
              "type" : "string"
            },
            "details" : {
              "type" : "string"
            },
            "correlationId" : {
              "type" : "string"
            }
          }
        } ]
      },
      "PolicyPlanRuleDTO" : {
        "required" : [ "ruleAction" ],
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "ruleName" : {
            "type" : "string"
          },
          "ruleNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ruleNumberStr" : {
            "type" : "string"
          },
          "ruleUUID" : {
            "type" : "string"
          },
          "apps" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRuleAppObjectDTO"
            }
          },
          "destinations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRuleDestinationObjectDTO"
            }
          },
          "services" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRuleServiceObjectDTO"
            }
          },
          "sources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRuleSourceObjectDTO"
            }
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRuleUserObjectDTO"
            }
          },
          "sourceZones" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRuleSourceZoneObjectDTO"
            }
          },
          "destinationZones" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRuleDestinationZoneObjectDTO"
            }
          },
          "profiles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRuleProfileObjectDTO"
            }
          },
          "schedules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRuleScheduleObjectDTO"
            }
          },
          "urlMatchers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRuleUrlMatcherObjectDTO"
            }
          },
          "ruleAction" : {
            "type" : "string",
            "enum" : [ "ACCEPT", "AUTHENTICATE", "DROP", "ENCRYPT", "FROM_TUNNEL", "INLINE", "INTERACTIVE_BLOCK", "REJECT", "TUNNEL" ]
          },
          "commentText" : {
            "type" : "string"
          },
          "log" : {
            "type" : "boolean"
          },
          "disabled" : {
            "type" : "boolean"
          },
          "tcpFlags" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ACK", "CWR", "ECE", "ESTABLISHED", "FIN", "NS", "PSH", "RST", "SYN", "URG" ]
            }
          }
        }
      },
      "PolicyPlanRuleDestinationObjectDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "policyPlanRuleId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "APP", "DESTINATION", "DEST_ZONE", "PROFILE", "SCHEDULE", "SERVICE", "SOURCE", "SOURCE_ZONE", "URL_MATCHER", "USER" ]
          },
          "objectType" : {
            "type" : "string",
            "enum" : [ "APP", "NETWORK", "PROFILE", "SCHEDULE", "SERVICE", "URL_MATCHER", "USER", "ZONE" ]
          },
          "object" : {
            "$ref" : "#/components/schemas/FirewallObjectDTO"
          },
          "ppObject" : {
            "$ref" : "#/components/schemas/PolicyPlanObjectDTO"
          }
        }
      },
      "PolicyPlanRuleDestinationZoneObjectDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "policyPlanRuleId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "APP", "DESTINATION", "DEST_ZONE", "PROFILE", "SCHEDULE", "SERVICE", "SOURCE", "SOURCE_ZONE", "URL_MATCHER", "USER" ]
          },
          "objectType" : {
            "type" : "string",
            "enum" : [ "APP", "NETWORK", "PROFILE", "SCHEDULE", "SERVICE", "URL_MATCHER", "USER", "ZONE" ]
          },
          "object" : {
            "$ref" : "#/components/schemas/FirewallObjectDTO"
          },
          "ppObject" : {
            "$ref" : "#/components/schemas/PolicyPlanObjectDTO"
          }
        }
      },
      "PolicyPlanRuleProfileObjectDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "policyPlanRuleId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "APP", "DESTINATION", "DEST_ZONE", "PROFILE", "SCHEDULE", "SERVICE", "SOURCE", "SOURCE_ZONE", "URL_MATCHER", "USER" ]
          },
          "objectType" : {
            "type" : "string",
            "enum" : [ "APP", "NETWORK", "PROFILE", "SCHEDULE", "SERVICE", "URL_MATCHER", "USER", "ZONE" ]
          },
          "object" : {
            "$ref" : "#/components/schemas/FirewallObjectDTO"
          },
          "ppObject" : {
            "$ref" : "#/components/schemas/PolicyPlanObjectDTO"
          }
        }
      },
      "PolicyPlanRuleRequirementDTO" : {
        "required" : [ "requirementType" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyPlanRequirementDTO"
        }, {
          "type" : "object",
          "properties" : {
            "apps" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "destinations" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "services" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "sources" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "users" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "action" : {
              "type" : "string",
              "enum" : [ "ACCEPT", "AUTHENTICATE", "DROP", "ENCRYPT", "FROM_TUNNEL", "INLINE", "INTERACTIVE_BLOCK", "REJECT", "TUNNEL" ]
            }
          }
        } ]
      },
      "PolicyPlanRuleScheduleObjectDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "policyPlanRuleId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "APP", "DESTINATION", "DEST_ZONE", "PROFILE", "SCHEDULE", "SERVICE", "SOURCE", "SOURCE_ZONE", "URL_MATCHER", "USER" ]
          },
          "objectType" : {
            "type" : "string",
            "enum" : [ "APP", "NETWORK", "PROFILE", "SCHEDULE", "SERVICE", "URL_MATCHER", "USER", "ZONE" ]
          },
          "object" : {
            "$ref" : "#/components/schemas/FirewallObjectDTO"
          },
          "ppObject" : {
            "$ref" : "#/components/schemas/PolicyPlanObjectDTO"
          }
        }
      },
      "PolicyPlanRuleServiceObjectDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "policyPlanRuleId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "APP", "DESTINATION", "DEST_ZONE", "PROFILE", "SCHEDULE", "SERVICE", "SOURCE", "SOURCE_ZONE", "URL_MATCHER", "USER" ]
          },
          "objectType" : {
            "type" : "string",
            "enum" : [ "APP", "NETWORK", "PROFILE", "SCHEDULE", "SERVICE", "URL_MATCHER", "USER", "ZONE" ]
          },
          "object" : {
            "$ref" : "#/components/schemas/FirewallObjectDTO"
          },
          "ppObject" : {
            "$ref" : "#/components/schemas/PolicyPlanObjectDTO"
          }
        }
      },
      "PolicyPlanRuleSourceObjectDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "policyPlanRuleId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "APP", "DESTINATION", "DEST_ZONE", "PROFILE", "SCHEDULE", "SERVICE", "SOURCE", "SOURCE_ZONE", "URL_MATCHER", "USER" ]
          },
          "objectType" : {
            "type" : "string",
            "enum" : [ "APP", "NETWORK", "PROFILE", "SCHEDULE", "SERVICE", "URL_MATCHER", "USER", "ZONE" ]
          },
          "object" : {
            "$ref" : "#/components/schemas/FirewallObjectDTO"
          },
          "ppObject" : {
            "$ref" : "#/components/schemas/PolicyPlanObjectDTO"
          }
        }
      },
      "PolicyPlanRuleSourceZoneObjectDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "policyPlanRuleId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "APP", "DESTINATION", "DEST_ZONE", "PROFILE", "SCHEDULE", "SERVICE", "SOURCE", "SOURCE_ZONE", "URL_MATCHER", "USER" ]
          },
          "objectType" : {
            "type" : "string",
            "enum" : [ "APP", "NETWORK", "PROFILE", "SCHEDULE", "SERVICE", "URL_MATCHER", "USER", "ZONE" ]
          },
          "object" : {
            "$ref" : "#/components/schemas/FirewallObjectDTO"
          },
          "ppObject" : {
            "$ref" : "#/components/schemas/PolicyPlanObjectDTO"
          }
        }
      },
      "PolicyPlanRuleUrlMatcherObjectDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "policyPlanRuleId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "APP", "DESTINATION", "DEST_ZONE", "PROFILE", "SCHEDULE", "SERVICE", "SOURCE", "SOURCE_ZONE", "URL_MATCHER", "USER" ]
          },
          "objectType" : {
            "type" : "string",
            "enum" : [ "APP", "NETWORK", "PROFILE", "SCHEDULE", "SERVICE", "URL_MATCHER", "USER", "ZONE" ]
          },
          "object" : {
            "$ref" : "#/components/schemas/FirewallObjectDTO"
          },
          "ppObject" : {
            "$ref" : "#/components/schemas/PolicyPlanObjectDTO"
          }
        }
      },
      "PolicyPlanRuleUserObjectDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "policyPlanRuleId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string",
            "enum" : [ "APP", "DESTINATION", "DEST_ZONE", "PROFILE", "SCHEDULE", "SERVICE", "SOURCE", "SOURCE_ZONE", "URL_MATCHER", "USER" ]
          },
          "objectType" : {
            "type" : "string",
            "enum" : [ "APP", "NETWORK", "PROFILE", "SCHEDULE", "SERVICE", "URL_MATCHER", "USER", "ZONE" ]
          },
          "object" : {
            "$ref" : "#/components/schemas/FirewallObjectDTO"
          },
          "ppObject" : {
            "$ref" : "#/components/schemas/PolicyPlanObjectDTO"
          }
        }
      },
      "PolicyPlanServiceObjectDTO" : {
        "required" : [ "objectType", "type" ],
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PolicyPlanObjectDTO"
        }, {
          "type" : "object",
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "SINGLE", "GROUP", "ANY" ]
            },
            "services" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/PolicyPlanProtocolPortDTO"
              }
            }
          }
        } ]
      },
      "UsageCriteriaDTO" : {
        "required" : [ "pattern" ],
        "type" : "object",
        "properties" : {
          "pattern" : {
            "type" : "string"
          },
          "fields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UsageCriteriaFieldDTO"
            }
          },
          "dynamicFields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UsageCriteriaDynamicFieldDTO"
            }
          }
        }
      },
      "UsageCriteriaDynamicFieldDTO" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "UsageCriteriaFieldDTO" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "UserTagDTO" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "domainId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "sharedUserGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserGroupDTO"
            }
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "canUserEditTag" : {
            "type" : "boolean"
          },
          "tagReferenceCount" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "description" : "Representation of a User Tag instance"
      },
      "WorkflowPacketDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "businessKey" : {
            "type" : "string"
          },
          "businessKeySequence" : {
            "type" : "integer",
            "format" : "int64"
          },
          "workflowVersion" : {
            "$ref" : "#/components/schemas/WorkflowVersionDTO"
          },
          "completed" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "status" : {
            "type" : "string"
          },
          "requester" : {
            "type" : "string"
          },
          "assignee" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "variables" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "systemVariables" : {
            "type" : "string",
            "description" : "JSON formatted system variables"
          },
          "workflowPacketTasks" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowPacketTaskDTO"
            }
          },
          "policyPlanRequirements" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRequirementDTO"
            }
          },
          "userTags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserTagDTO"
            }
          }
        }
      },
      "WorkflowPacketTaskDTO" : {
        "required" : [ "workflowTask" ],
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "workflowTask" : {
            "$ref" : "#/components/schemas/WorkflowTaskDTO"
          },
          "completed" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "assignee" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "duration" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "WorkflowTaskDTO" : {
        "required" : [ "key", "name", "type", "workflowVersion" ],
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "workflowVersion" : {
            "$ref" : "#/components/schemas/WorkflowVersionDTO"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "SearchResultDTOUserDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/UserDTO"
            }
          }
        }
      },
      "PolicyPlanRequirementTypeChildDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "key" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "GENERAL", "NONE", "RULE", "CLONE", "DECOM" ]
          },
          "form" : {
            "$ref" : "#/components/schemas/WorkflowFormDTO"
          },
          "workflowVersionId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "colorPrimary" : {
            "type" : "string"
          },
          "colorSecondary" : {
            "type" : "string"
          },
          "sequence" : {
            "type" : "integer",
            "format" : "int32"
          },
          "summary" : {
            "type" : "string"
          },
          "features" : {
            "type" : "string",
            "description" : "JSON formatted requirement type features"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          }
        }
      },
      "WorkflowFormDTO" : {
        "required" : [ "json", "key", "name", "workflowVersionId" ],
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "key" : {
            "type" : "string"
          },
          "workflowVersionId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "json" : {
            "type" : "string",
            "description" : "JSON formatted workflow form"
          },
          "buttons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowTaskButtonDTO"
            }
          },
          "category" : {
            "type" : "string",
            "enum" : [ "PACKET", "REQUIREMENT" ]
          }
        }
      },
      "WorkflowTaskButtonDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "workflowTaskId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "workflowVersionId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "text" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "style" : {
            "type" : "string"
          },
          "sequence" : {
            "type" : "integer",
            "format" : "int32"
          },
          "comments" : {
            "type" : "boolean"
          },
          "validateForm" : {
            "type" : "boolean"
          }
        }
      },
      "WorkflowTaskPropertiesDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "workflowForm" : {
            "$ref" : "#/components/schemas/WorkflowFormDTO"
          },
          "workflowTaskId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sla" : {
            "type" : "integer",
            "format" : "int32"
          },
          "attributeLevelSecurity" : {
            "type" : "boolean"
          },
          "defaultConfig" : {
            "type" : "string",
            "description" : "JSON formatted default task property config"
          },
          "config" : {
            "type" : "string",
            "description" : "JSON formatted task property config"
          },
          "mergedConfig" : {
            "type" : "string",
            "description" : "JSON formatted merged task property config"
          },
          "children" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRequirementTypeChildDTO"
            }
          }
        }
      },
      "WorkflowPermissionDefinitionCollectionDTO" : {
        "type" : "object",
        "properties" : {
          "workflowPermissions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowPermissionDefinitionDTO"
            }
          }
        }
      },
      "WorkflowPermissionDefinitionDTO" : {
        "required" : [ "name", "type", "workflowId" ],
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "workflowId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "VIEW_PACKET", "VIEW_SECURE", "CREATE_PACKET" ]
          }
        }
      },
      "WorkflowDTOCollection" : {
        "type" : "object",
        "properties" : {
          "workflows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowDTO"
            }
          }
        }
      },
      "SearchResultDTOWorkflowTaskDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowTaskDTO"
            }
          }
        }
      },
      "SearchResultDTOWorkflowDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowDTO"
            }
          }
        }
      },
      "SearchResultDTOWorkflowPacketSiqlDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowPacketSiqlDTO"
            }
          }
        }
      },
      "WorkflowPacketSiqlDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "businessKey" : {
            "type" : "string"
          },
          "businessKeySequence" : {
            "type" : "integer",
            "format" : "int64"
          },
          "workflowVersion" : {
            "$ref" : "#/components/schemas/WorkflowVersionDTO"
          },
          "completed" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "status" : {
            "type" : "string"
          },
          "requester" : {
            "type" : "string"
          },
          "assignee" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "variables" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "systemVariables" : {
            "type" : "string",
            "description" : "JSON formatted system variables"
          },
          "workflowPacketTasks" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowPacketTaskDTO"
            }
          },
          "policyPlanRequirements" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRequirementDTO"
            }
          },
          "userTags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserTagDTO"
            }
          }
        },
        "description" : "Results container"
      },
      "ServiceTaskExitVariableDTO" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "INTEGER", "BOOLEAN", "TEXT" ]
          },
          "description" : {
            "type" : "string"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sampleConditions" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ServiceTaskDTO" : {
        "type" : "object",
        "properties" : {
          "serviceTaskType" : {
            "type" : "string",
            "enum" : [ "AUTO_DESIGN_CHANGE_TASK", "CUSTOM_PROPERTY_UPDATE_TASK", "EXTERNAL_WORKFLOW_PACKET_CREATE_TASK", "EXTERNAL_WORKFLOW_PACKET_LOOKUP_TASK", "EXTERNAL_WORKFLOW_PACKET_UPDATE_TASK", "HTTP_REQUEST_TASK", "LDAP_ATTRIBUTES_LOOKUP_TASK", "PACKET_AUTOMATION_GENERATION_TASK", "PRE_CHANGE_ASSESSMENT_TASK", "WORKFLOW_VARIABLE_UPDATE_FROM_CUSTOM_PROPERTY_TASK" ]
          },
          "displayName" : {
            "type" : "string"
          },
          "summary" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "WorkflowVersionCollectionDTO" : {
        "type" : "object",
        "properties" : {
          "workflowVersions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowVersionDTO"
            }
          }
        }
      },
      "SearchResultDTOWorkflowVersionDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/WorkflowVersionDTO"
            }
          }
        }
      },
      "KPIChunk" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "object"
          },
          "siql" : {
            "type" : "string"
          },
          "descriptionArgs" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "KPIDTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "NO_DATA", "NOT_SUPPORTED", "ERROR" ]
          },
          "retrievalDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "time" : {
            "type" : "integer",
            "format" : "int64"
          },
          "top" : {
            "$ref" : "#/components/schemas/KPIChunk"
          },
          "bottom" : {
            "$ref" : "#/components/schemas/KPIChunk"
          }
        }
      },
      "PolicyPlanChangeCollectionDTO" : {
        "type" : "object",
        "properties" : {
          "changes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanChangeDTO"
            }
          }
        }
      },
      "SearchResultDTOPolicyPlanObjectDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanObjectDTO"
            }
          }
        }
      },
      "SearchResultDTOPolicyPlanChangeDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanChangeDTO"
            }
          }
        }
      },
      "SearchResultDTOPolicyPlanChangeTypeDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "type" : "string",
              "description" : "Results container",
              "enum" : [ "GENERAL", "OBJECT", "RULE" ]
            }
          }
        }
      },
      "PolicyPlanRequirementCollectionDTO" : {
        "type" : "object",
        "properties" : {
          "requirements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRequirementDTO"
            }
          }
        }
      },
      "ChangeRecommendationDTO" : {
        "type" : "object",
        "properties" : {
          "requestId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "deviceChanges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceChangeRecommendationDTO"
            }
          }
        }
      },
      "DeviceChangeRecommendationDTO" : {
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ruleChanges" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRuleChangeDTO"
            }
          },
          "objectChanges" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanObjectChangeDTO"
            }
          },
          "error" : {
            "type" : "string"
          }
        }
      },
      "PolicyPlanRequirementFieldCollectionDTO" : {
        "type" : "object",
        "properties" : {
          "policyPlanRequirementFields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRequirementFieldDTO"
            }
          }
        }
      },
      "PolicyPlanRequirementFieldDTO" : {
        "required" : [ "type", "workflowId" ],
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "STRING", "INTEGER", "BOOLEAN", "DATE", "USER", "STRING_ARRAY", "CORE" ]
          },
          "label" : {
            "type" : "string"
          },
          "input" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "format" : {
            "type" : "string"
          },
          "workflowId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SearchResultDTOVerificationProcessResultDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/VerificationProcessResultDTO"
            }
          }
        }
      },
      "VerificationProcessResultDTO" : {
        "required" : [ "policyPlanChange", "resultCount", "status", "verificationProcessType" ],
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "policyPlanChange" : {
            "$ref" : "#/components/schemas/PolicyPlanChangeDTO"
          },
          "verificationProcessType" : {
            "type" : "string",
            "enum" : [ "GENERAL_VERIFICATION", "CHANGE_CONTROL_NUMBER_MATCH", "CHANGE_LOG_ASSOCIATION", "MANAGEMENT_STATION_MATCH", "RULE_SEARCH_MATCH", "MANUAL_VERIFICATION" ]
          },
          "parentDeviceId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "parentDeviceName" : {
            "type" : "string"
          },
          "parentDeviceType" : {
            "type" : "string"
          },
          "parentDeviceManagementIp" : {
            "type" : "string"
          },
          "ruleMatchUUID" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "SKIPPED", "UNVERIFIED", "VERIFIED" ]
          },
          "resultCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "comment" : {
            "type" : "string"
          }
        }
      },
      "SearchResultDTOPolicyPlanRequirementDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRequirementDTO"
            }
          }
        }
      },
      "PolicyPlanRequirementBasicDTO" : {
        "required" : [ "requirementType" ],
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "workflowPacketId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "requirementType" : {
            "type" : "string",
            "enum" : [ "GENERAL", "NONE", "RULE", "CLONE", "DECOM" ]
          },
          "changePlanReviewDecision" : {
            "type" : "string",
            "enum" : [ "APPROVED", "REJECTED", "UNDECIDED" ]
          },
          "childKey" : {
            "type" : "string"
          },
          "businessKey" : {
            "type" : "string"
          },
          "businessKeySequence" : {
            "type" : "integer",
            "format" : "int64"
          },
          "planned" : {
            "type" : "boolean"
          }
        },
        "description" : "Results container"
      },
      "SearchResultDTOPolicyPlanRequirementBasicDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRequirementBasicDTO"
            }
          }
        }
      },
      "PolicyPlanRequirementErrorCollectionDTO" : {
        "type" : "object",
        "properties" : {
          "policyPlanRequirementErrorDTOs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRequirementErrorDTO"
            }
          }
        }
      },
      "PolicyPlanRequirementErrorDTO" : {
        "type" : "object",
        "properties" : {
          "policyPlanRequirementDTO" : {
            "$ref" : "#/components/schemas/PolicyPlanRequirementDTO"
          },
          "parsingErrors" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SearchResultDTOPolicyPlanRuleDTO" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number pageable results",
            "format" : "int64"
          },
          "page" : {
            "type" : "integer",
            "description" : "Current page",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "description" : "Page size",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of results returned",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Results container",
            "items" : {
              "$ref" : "#/components/schemas/PolicyPlanRuleDTO"
            }
          }
        }
      },
      "PreChangeAssessmentControlDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "control" : {
            "$ref" : "#/components/schemas/ControlDTO"
          },
          "preChangeAssessmentResultId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "PASS", "FAIL" ]
          },
          "assessments" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "controlStatusChanged" : {
            "type" : "boolean"
          },
          "recommendationText" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PreChangeAssessmentResultDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "device" : {
            "$ref" : "#/components/schemas/DeviceDTO"
          },
          "policyPlanRequirementDTO" : {
            "$ref" : "#/components/schemas/PolicyPlanRequirementDTO"
          },
          "sciBefore" : {
            "type" : "number",
            "format" : "float"
          },
          "sciAfter" : {
            "type" : "number",
            "format" : "float"
          },
          "sciDelta" : {
            "type" : "number",
            "format" : "float"
          },
          "deviceComplexityBefore" : {
            "type" : "number",
            "format" : "double"
          },
          "deviceComplexityAfter" : {
            "type" : "number",
            "format" : "double"
          },
          "deviceComplexityDelta" : {
            "type" : "number",
            "format" : "double"
          },
          "proposedChangeCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "controlFailureCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "preChangeAssessmentControls" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PreChangeAssessmentControlDTO"
            }
          },
          "affectedRules" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "error" : {
            "type" : "string"
          },
          "avgRuleRiskScoreBefore" : {
            "type" : "number",
            "format" : "double"
          },
          "avgRuleRiskScoreAfter" : {
            "type" : "number",
            "format" : "double"
          },
          "avgRuleRiskScoreDelta" : {
            "type" : "number",
            "format" : "double"
          },
          "newExposedVulnsCount" : {
            "type" : "integer",
            "format" : "int64"
          },
          "newExposedVulns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PreChangeAssessmentSdHostVulnDTO"
            }
          },
          "controlStatusChange" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PreChangeAssessmentSdHostVulnDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sdHostName" : {
            "type" : "string"
          },
          "sdHostAddress" : {
            "type" : "string"
          },
          "protocol" : {
            "type" : "integer",
            "format" : "int32"
          },
          "port" : {
            "type" : "integer",
            "format" : "int32"
          },
          "vulnKey" : {
            "type" : "string"
          },
          "vulnDescription" : {
            "type" : "string"
          },
          "effect" : {
            "type" : "string",
            "enum" : [ "OTHER", "DOS", "USER", "ROOT" ]
          },
          "locality" : {
            "type" : "string",
            "enum" : [ "CLIENT", "LOCAL", "REMOTE" ]
          },
          "cvssBaseScore" : {
            "type" : "number",
            "format" : "double"
          },
          "published" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ColumnDTO" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "object"
          },
          "siql" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "RowDTO" : {
        "type" : "object",
        "properties" : {
          "columns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ColumnDTO"
            }
          },
          "siql" : {
            "type" : "string"
          }
        }
      },
      "WidgetDTO" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "NO_DATA", "NOT_SUPPORTED", "ERROR" ]
          },
          "retrievalDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "time" : {
            "type" : "integer",
            "format" : "int64"
          },
          "rows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RowDTO"
            }
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "type" : "string"
          },
          "siql" : {
            "type" : "string"
          }
        }
      },
      "WorkflowPacketAutomationDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "workflowPacketId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "results" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/WorkflowPacketAutomationResultDTO"
            }
          }
        }
      },
      "WorkflowPacketAutomationResultDTO" : {
        "type" : "object",
        "properties" : {
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "createdBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "lastModifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastModifiedBy" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deviceId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "deviceName" : {
            "type" : "string"
          },
          "revisionId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "revisionDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "commands" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "changeKeys" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "basicAuth" : {
        "type" : "http",
        "description" : "Basic Auth",
        "scheme" : "basic"
      }
    }
  }
}
